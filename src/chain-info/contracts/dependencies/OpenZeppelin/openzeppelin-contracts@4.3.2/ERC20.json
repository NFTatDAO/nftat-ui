{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "13": "/Users/patrick/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Context.sol",
    "2": "/Users/patrick/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/ERC20.sol",
    "3": "/Users/patrick/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/IERC20.sol",
    "5": "/Users/patrick/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/extensions/IERC20Metadata.sol"
  },
  "ast": {
    "absolutePath": "/Users/patrick/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/ERC20.sol",
    "exportedSymbols": {
      "Context": [
        2587
      ],
      "ERC20": [
        4493
      ],
      "IERC20": [
        6434
      ],
      "IERC20Metadata": [
        6459
      ]
    },
    "id": 4494,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3949,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:2"
      },
      {
        "absolutePath": "/Users/patrick/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/IERC20.sol",
        "file": "./IERC20.sol",
        "id": 3950,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4494,
        "sourceUnit": 6435,
        "src": "58:22:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/patrick/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "file": "./extensions/IERC20Metadata.sol",
        "id": 3951,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4494,
        "sourceUnit": 6460,
        "src": "81:41:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/patrick/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Context.sol",
        "file": "../../utils/Context.sol",
        "id": 3952,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4494,
        "sourceUnit": 2588,
        "src": "123:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3954,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2587,
              "src": "1349:7:2"
            },
            "id": 3955,
            "nodeType": "InheritanceSpecifier",
            "src": "1349:7:2"
          },
          {
            "baseName": {
              "id": 3956,
              "name": "IERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6434,
              "src": "1358:6:2"
            },
            "id": 3957,
            "nodeType": "InheritanceSpecifier",
            "src": "1358:6:2"
          },
          {
            "baseName": {
              "id": 3958,
              "name": "IERC20Metadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6459,
              "src": "1366:14:2"
            },
            "id": 3959,
            "nodeType": "InheritanceSpecifier",
            "src": "1366:14:2"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3953,
          "nodeType": "StructuredDocumentation",
          "src": "158:1172:2",
          "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
        },
        "fullyImplemented": true,
        "id": 4493,
        "linearizedBaseContracts": [
          4493,
          6459,
          6434,
          2587
        ],
        "name": "ERC20",
        "nameLocation": "1340:5:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3963,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "1423:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 4493,
            "src": "1387:45:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 3962,
              "keyType": {
                "id": 3960,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1395:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1387:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 3961,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1406:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3969,
            "mutability": "mutable",
            "name": "_allowances",
            "nameLocation": "1495:11:2",
            "nodeType": "VariableDeclaration",
            "scope": 4493,
            "src": "1439:67:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 3968,
              "keyType": {
                "id": 3964,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1447:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1439:47:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 3967,
                "keyType": {
                  "id": 3965,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1466:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1458:27:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 3966,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1477:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3971,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nameLocation": "1529:12:2",
            "nodeType": "VariableDeclaration",
            "scope": 4493,
            "src": "1513:28:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3970,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1513:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3973,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "1563:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 4493,
            "src": "1548:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 3972,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1548:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3975,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "1589:7:2",
            "nodeType": "VariableDeclaration",
            "scope": 4493,
            "src": "1574:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 3974,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1574:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 3991,
              "nodeType": "Block",
              "src": "1962:57:2",
              "statements": [
                {
                  "expression": {
                    "id": 3985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3983,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3973,
                      "src": "1972:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3984,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3978,
                      "src": "1980:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1972:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3986,
                  "nodeType": "ExpressionStatement",
                  "src": "1972:13:2"
                },
                {
                  "expression": {
                    "id": 3989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3987,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3975,
                      "src": "1995:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3988,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3980,
                      "src": "2005:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1995:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3990,
                  "nodeType": "ExpressionStatement",
                  "src": "1995:17:2"
                }
              ]
            },
            "documentation": {
              "id": 3976,
              "nodeType": "StructuredDocumentation",
              "src": "1603:298:2",
              "text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
            },
            "id": 3992,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3981,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3978,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "1932:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 3992,
                  "src": "1918:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3977,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1918:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3980,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "1953:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 3992,
                  "src": "1939:21:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3979,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1939:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1917:44:2"
            },
            "returnParameters": {
              "id": 3982,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1962:0:2"
            },
            "scope": 4493,
            "src": "1906:113:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6446
            ],
            "body": {
              "id": 4001,
              "nodeType": "Block",
              "src": "2153:29:2",
              "statements": [
                {
                  "expression": {
                    "id": 3999,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3973,
                    "src": "2170:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 3998,
                  "id": 4000,
                  "nodeType": "Return",
                  "src": "2163:12:2"
                }
              ]
            },
            "documentation": {
              "id": 3993,
              "nodeType": "StructuredDocumentation",
              "src": "2025:54:2",
              "text": " @dev Returns the name of the token."
            },
            "functionSelector": "06fdde03",
            "id": 4002,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "2093:4:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3995,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2120:8:2"
            },
            "parameters": {
              "id": 3994,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2097:2:2"
            },
            "returnParameters": {
              "id": 3998,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3997,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4002,
                  "src": "2138:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3996,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2138:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2137:15:2"
            },
            "scope": 4493,
            "src": "2084:98:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6452
            ],
            "body": {
              "id": 4011,
              "nodeType": "Block",
              "src": "2366:31:2",
              "statements": [
                {
                  "expression": {
                    "id": 4009,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3975,
                    "src": "2383:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 4008,
                  "id": 4010,
                  "nodeType": "Return",
                  "src": "2376:14:2"
                }
              ]
            },
            "documentation": {
              "id": 4003,
              "nodeType": "StructuredDocumentation",
              "src": "2188:102:2",
              "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
            },
            "functionSelector": "95d89b41",
            "id": 4012,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "2304:6:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4005,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2333:8:2"
            },
            "parameters": {
              "id": 4004,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2310:2:2"
            },
            "returnParameters": {
              "id": 4008,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4007,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4012,
                  "src": "2351:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4006,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2351:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2350:15:2"
            },
            "scope": 4493,
            "src": "2295:102:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6458
            ],
            "body": {
              "id": 4021,
              "nodeType": "Block",
              "src": "3086:26:2",
              "statements": [
                {
                  "expression": {
                    "hexValue": "3138",
                    "id": 4019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3103:2:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "functionReturnParameters": 4018,
                  "id": 4020,
                  "nodeType": "Return",
                  "src": "3096:9:2"
                }
              ]
            },
            "documentation": {
              "id": 4013,
              "nodeType": "StructuredDocumentation",
              "src": "2403:613:2",
              "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
            },
            "functionSelector": "313ce567",
            "id": 4022,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "3030:8:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4015,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3061:8:2"
            },
            "parameters": {
              "id": 4014,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3038:2:2"
            },
            "returnParameters": {
              "id": 4018,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4017,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4022,
                  "src": "3079:5:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 4016,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3079:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3078:7:2"
            },
            "scope": 4493,
            "src": "3021:91:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6365
            ],
            "body": {
              "id": 4031,
              "nodeType": "Block",
              "src": "3242:36:2",
              "statements": [
                {
                  "expression": {
                    "id": 4029,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3971,
                    "src": "3259:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4028,
                  "id": 4030,
                  "nodeType": "Return",
                  "src": "3252:19:2"
                }
              ]
            },
            "documentation": {
              "id": 4023,
              "nodeType": "StructuredDocumentation",
              "src": "3118:49:2",
              "text": " @dev See {IERC20-totalSupply}."
            },
            "functionSelector": "18160ddd",
            "id": 4032,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "3181:11:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4025,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3215:8:2"
            },
            "parameters": {
              "id": 4024,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3192:2:2"
            },
            "returnParameters": {
              "id": 4028,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4027,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4032,
                  "src": "3233:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4026,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3233:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3232:9:2"
            },
            "scope": 4493,
            "src": "3172:106:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6373
            ],
            "body": {
              "id": 4045,
              "nodeType": "Block",
              "src": "3419:42:2",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 4041,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3963,
                      "src": "3436:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 4043,
                    "indexExpression": {
                      "id": 4042,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4035,
                      "src": "3446:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3436:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4040,
                  "id": 4044,
                  "nodeType": "Return",
                  "src": "3429:25:2"
                }
              ]
            },
            "documentation": {
              "id": 4033,
              "nodeType": "StructuredDocumentation",
              "src": "3284:47:2",
              "text": " @dev See {IERC20-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 4046,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "3345:9:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4037,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3392:8:2"
            },
            "parameters": {
              "id": 4036,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4035,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3363:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 4046,
                  "src": "3355:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4034,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3355:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3354:17:2"
            },
            "returnParameters": {
              "id": 4040,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4039,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4046,
                  "src": "3410:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4038,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3410:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3409:9:2"
            },
            "scope": 4493,
            "src": "3336:125:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6383
            ],
            "body": {
              "id": 4066,
              "nodeType": "Block",
              "src": "3756:80:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 4058,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2577,
                          "src": "3776:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 4059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3776:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4060,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4049,
                        "src": "3790:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4061,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4051,
                        "src": "3801:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4057,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4297,
                      "src": "3766:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3766:42:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4063,
                  "nodeType": "ExpressionStatement",
                  "src": "3766:42:2"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 4064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3825:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4056,
                  "id": 4065,
                  "nodeType": "Return",
                  "src": "3818:11:2"
                }
              ]
            },
            "documentation": {
              "id": 4047,
              "nodeType": "StructuredDocumentation",
              "src": "3467:192:2",
              "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
            },
            "functionSelector": "a9059cbb",
            "id": 4067,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "3673:8:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4053,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3732:8:2"
            },
            "parameters": {
              "id": 4052,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4049,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "3690:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 4067,
                  "src": "3682:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4048,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3682:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4051,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3709:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 4067,
                  "src": "3701:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4050,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3701:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3681:35:2"
            },
            "returnParameters": {
              "id": 4056,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4055,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4067,
                  "src": "3750:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4054,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3750:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3749:6:2"
            },
            "scope": 4493,
            "src": "3664:172:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6393
            ],
            "body": {
              "id": 4084,
              "nodeType": "Block",
              "src": "3992:51:2",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 4078,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3969,
                        "src": "4009:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 4080,
                      "indexExpression": {
                        "id": 4079,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4070,
                        "src": "4021:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4009:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 4082,
                    "indexExpression": {
                      "id": 4081,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4072,
                      "src": "4028:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4009:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4077,
                  "id": 4083,
                  "nodeType": "Return",
                  "src": "4002:34:2"
                }
              ]
            },
            "documentation": {
              "id": 4068,
              "nodeType": "StructuredDocumentation",
              "src": "3842:47:2",
              "text": " @dev See {IERC20-allowance}."
            },
            "functionSelector": "dd62ed3e",
            "id": 4085,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "3903:9:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4074,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3965:8:2"
            },
            "parameters": {
              "id": 4073,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4070,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "3921:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 4085,
                  "src": "3913:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4069,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3913:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4072,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "3936:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 4085,
                  "src": "3928:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4071,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3928:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3912:32:2"
            },
            "returnParameters": {
              "id": 4077,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4076,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4085,
                  "src": "3983:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4075,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3983:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3982:9:2"
            },
            "scope": 4493,
            "src": "3894:149:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6403
            ],
            "body": {
              "id": 4105,
              "nodeType": "Block",
              "src": "4270:77:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 4097,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2577,
                          "src": "4289:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 4098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4289:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4099,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4088,
                        "src": "4303:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4100,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4090,
                        "src": "4312:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4096,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4470,
                      "src": "4280:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4280:39:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4102,
                  "nodeType": "ExpressionStatement",
                  "src": "4280:39:2"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 4103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4336:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4095,
                  "id": 4104,
                  "nodeType": "Return",
                  "src": "4329:11:2"
                }
              ]
            },
            "documentation": {
              "id": 4086,
              "nodeType": "StructuredDocumentation",
              "src": "4049:127:2",
              "text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "095ea7b3",
            "id": 4106,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "4190:7:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4092,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4246:8:2"
            },
            "parameters": {
              "id": 4091,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4088,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "4206:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 4106,
                  "src": "4198:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4087,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4198:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4090,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4223:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 4106,
                  "src": "4215:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4089,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4215:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4197:33:2"
            },
            "returnParameters": {
              "id": 4095,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4094,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4106,
                  "src": "4264:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4093,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4264:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4263:6:2"
            },
            "scope": 4493,
            "src": "4181:166:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6415
            ],
            "body": {
              "id": 4153,
              "nodeType": "Block",
              "src": "4956:336:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4120,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4109,
                        "src": "4976:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4121,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4111,
                        "src": "4984:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4122,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4113,
                        "src": "4995:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4119,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4297,
                      "src": "4966:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4966:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4124,
                  "nodeType": "ExpressionStatement",
                  "src": "4966:36:2"
                },
                {
                  "assignments": [
                    4126
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4126,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nameLocation": "5021:16:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 4153,
                      "src": "5013:24:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4125,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5013:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4133,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 4127,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3969,
                        "src": "5040:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 4129,
                      "indexExpression": {
                        "id": 4128,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4109,
                        "src": "5052:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5040:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 4132,
                    "indexExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4130,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2577,
                        "src": "5060:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 4131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5060:12:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5040:33:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5013:60:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4135,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4126,
                          "src": "5091:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 4136,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4113,
                          "src": "5111:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5091:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
                        "id": 4138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5119:42:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                        },
                        "value": "ERC20: transfer amount exceeds allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                        }
                      ],
                      "id": 4134,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5083:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5083:79:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4140,
                  "nodeType": "ExpressionStatement",
                  "src": "5083:79:2"
                },
                {
                  "id": 4150,
                  "nodeType": "UncheckedBlock",
                  "src": "5172:92:2",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 4142,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4109,
                            "src": "5205:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 4143,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2577,
                              "src": "5213:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 4144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5213:12:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 4145,
                              "name": "currentAllowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4126,
                              "src": "5227:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 4146,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4113,
                              "src": "5246:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5227:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 4141,
                          "name": "_approve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4470,
                          "src": "5196:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 4148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5196:57:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 4149,
                      "nodeType": "ExpressionStatement",
                      "src": "5196:57:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 4151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5281:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4118,
                  "id": 4152,
                  "nodeType": "Return",
                  "src": "5274:11:2"
                }
              ]
            },
            "documentation": {
              "id": 4107,
              "nodeType": "StructuredDocumentation",
              "src": "4353:456:2",
              "text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
            },
            "functionSelector": "23b872dd",
            "id": 4154,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "4823:12:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4115,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4932:8:2"
            },
            "parameters": {
              "id": 4114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4109,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "4853:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 4154,
                  "src": "4845:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4108,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4845:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4111,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "4877:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 4154,
                  "src": "4869:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4110,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4869:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4113,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4904:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 4154,
                  "src": "4896:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4112,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4896:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4835:81:2"
            },
            "returnParameters": {
              "id": 4118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4117,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4154,
                  "src": "4950:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4116,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4950:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4949:6:2"
            },
            "scope": 4493,
            "src": "4814:478:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4180,
              "nodeType": "Block",
              "src": "5781:118:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 4165,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2577,
                          "src": "5800:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 4166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5800:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4167,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4157,
                        "src": "5814:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 4168,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3969,
                              "src": "5823:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 4171,
                            "indexExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 4169,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2577,
                                "src": "5835:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 4170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5835:12:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5823:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 4173,
                          "indexExpression": {
                            "id": 4172,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4157,
                            "src": "5849:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5823:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 4174,
                          "name": "addedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4159,
                          "src": "5860:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5823:47:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4164,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4470,
                      "src": "5791:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5791:80:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4177,
                  "nodeType": "ExpressionStatement",
                  "src": "5791:80:2"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 4178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5888:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4163,
                  "id": 4179,
                  "nodeType": "Return",
                  "src": "5881:11:2"
                }
              ]
            },
            "documentation": {
              "id": 4155,
              "nodeType": "StructuredDocumentation",
              "src": "5298:384:2",
              "text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "39509351",
            "id": 4181,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increaseAllowance",
            "nameLocation": "5696:17:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4157,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "5722:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 4181,
                  "src": "5714:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4156,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5714:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4159,
                  "mutability": "mutable",
                  "name": "addedValue",
                  "nameLocation": "5739:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 4181,
                  "src": "5731:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4158,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5731:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5713:37:2"
            },
            "returnParameters": {
              "id": 4163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4162,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4181,
                  "src": "5775:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4161,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5775:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5774:6:2"
            },
            "scope": 4493,
            "src": "5687:212:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4219,
              "nodeType": "Block",
              "src": "6485:306:2",
              "statements": [
                {
                  "assignments": [
                    4192
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4192,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nameLocation": "6503:16:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 4219,
                      "src": "6495:24:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4191,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6495:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4199,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 4193,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3969,
                        "src": "6522:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 4196,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 4194,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2577,
                          "src": "6534:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 4195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6534:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6522:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 4198,
                    "indexExpression": {
                      "id": 4197,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4184,
                      "src": "6548:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6522:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6495:61:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4201,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4192,
                          "src": "6574:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 4202,
                          "name": "subtractedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4186,
                          "src": "6594:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6574:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
                        "id": 4204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6611:39:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                          "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                        },
                        "value": "ERC20: decreased allowance below zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                          "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                        }
                      ],
                      "id": 4200,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6566:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6566:85:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4206,
                  "nodeType": "ExpressionStatement",
                  "src": "6566:85:2"
                },
                {
                  "id": 4216,
                  "nodeType": "UncheckedBlock",
                  "src": "6661:102:2",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 4208,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2577,
                              "src": "6694:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 4209,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6694:12:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 4210,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4184,
                            "src": "6708:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4213,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 4211,
                              "name": "currentAllowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4192,
                              "src": "6717:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 4212,
                              "name": "subtractedValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4186,
                              "src": "6736:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6717:34:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 4207,
                          "name": "_approve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4470,
                          "src": "6685:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 4214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6685:67:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 4215,
                      "nodeType": "ExpressionStatement",
                      "src": "6685:67:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 4217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6780:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4190,
                  "id": 4218,
                  "nodeType": "Return",
                  "src": "6773:11:2"
                }
              ]
            },
            "documentation": {
              "id": 4182,
              "nodeType": "StructuredDocumentation",
              "src": "5905:476:2",
              "text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
            },
            "functionSelector": "a457c2d7",
            "id": 4220,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decreaseAllowance",
            "nameLocation": "6395:17:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4184,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "6421:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 4220,
                  "src": "6413:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4183,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6413:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4186,
                  "mutability": "mutable",
                  "name": "subtractedValue",
                  "nameLocation": "6438:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 4220,
                  "src": "6430:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4185,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6430:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6412:42:2"
            },
            "returnParameters": {
              "id": 4190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4189,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4220,
                  "src": "6479:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4188,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6479:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6478:6:2"
            },
            "scope": 4493,
            "src": "6386:405:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4296,
              "nodeType": "Block",
              "src": "7382:596:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4231,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4223,
                          "src": "7400:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4234,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7418:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4233,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7410:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4232,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7410:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7410:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7400:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                        "id": 4237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7422:39:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        },
                        "value": "ERC20: transfer from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        }
                      ],
                      "id": 4230,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7392:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7392:70:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4239,
                  "nodeType": "ExpressionStatement",
                  "src": "7392:70:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4241,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4225,
                          "src": "7480:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4244,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7501:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4243,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7493:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4242,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7493:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7493:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7480:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 4247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7505:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        },
                        "value": "ERC20: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        }
                      ],
                      "id": 4240,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7472:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7472:71:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4249,
                  "nodeType": "ExpressionStatement",
                  "src": "7472:71:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4251,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4223,
                        "src": "7575:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4252,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4225,
                        "src": "7583:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4253,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4227,
                        "src": "7594:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4250,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4481,
                      "src": "7554:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7554:47:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4255,
                  "nodeType": "ExpressionStatement",
                  "src": "7554:47:2"
                },
                {
                  "assignments": [
                    4257
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4257,
                      "mutability": "mutable",
                      "name": "senderBalance",
                      "nameLocation": "7620:13:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 4296,
                      "src": "7612:21:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4256,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7612:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4261,
                  "initialValue": {
                    "baseExpression": {
                      "id": 4258,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3963,
                      "src": "7636:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 4260,
                    "indexExpression": {
                      "id": 4259,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4223,
                      "src": "7646:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7636:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7612:41:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4263,
                          "name": "senderBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4257,
                          "src": "7671:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 4264,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4227,
                          "src": "7688:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7671:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                        "id": 4266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7696:40:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        },
                        "value": "ERC20: transfer amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        }
                      ],
                      "id": 4262,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7663:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7663:74:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4268,
                  "nodeType": "ExpressionStatement",
                  "src": "7663:74:2"
                },
                {
                  "id": 4277,
                  "nodeType": "UncheckedBlock",
                  "src": "7747:77:2",
                  "statements": [
                    {
                      "expression": {
                        "id": 4275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 4269,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3963,
                            "src": "7771:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 4271,
                          "indexExpression": {
                            "id": 4270,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4223,
                            "src": "7781:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "7771:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4272,
                            "name": "senderBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4257,
                            "src": "7791:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 4273,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4227,
                            "src": "7807:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7791:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7771:42:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 4276,
                      "nodeType": "ExpressionStatement",
                      "src": "7771:42:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 4282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4278,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3963,
                        "src": "7833:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 4280,
                      "indexExpression": {
                        "id": 4279,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4225,
                        "src": "7843:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7833:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 4281,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4227,
                      "src": "7857:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7833:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4283,
                  "nodeType": "ExpressionStatement",
                  "src": "7833:30:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4285,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4223,
                        "src": "7888:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4286,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4225,
                        "src": "7896:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4287,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4227,
                        "src": "7907:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4284,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6424,
                      "src": "7879:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7879:35:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4289,
                  "nodeType": "EmitStatement",
                  "src": "7874:40:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4291,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4223,
                        "src": "7945:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4292,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4225,
                        "src": "7953:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4293,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4227,
                        "src": "7964:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4290,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4492,
                      "src": "7925:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7925:46:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4295,
                  "nodeType": "ExpressionStatement",
                  "src": "7925:46:2"
                }
              ]
            },
            "documentation": {
              "id": 4221,
              "nodeType": "StructuredDocumentation",
              "src": "6797:463:2",
              "text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
            },
            "id": 4297,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "7274:9:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4228,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4223,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "7301:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 4297,
                  "src": "7293:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4222,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7293:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4225,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "7325:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 4297,
                  "src": "7317:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4224,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7317:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4227,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7352:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 4297,
                  "src": "7344:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4226,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7344:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7283:81:2"
            },
            "returnParameters": {
              "id": 4229,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7382:0:2"
            },
            "scope": 4493,
            "src": "7265:713:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4352,
              "nodeType": "Block",
              "src": "8319:324:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4306,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4300,
                          "src": "8337:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4309,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8356:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4308,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8348:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4307,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8348:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8348:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8337:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 4312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8360:33:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        },
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        }
                      ],
                      "id": 4305,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8329:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8329:65:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4314,
                  "nodeType": "ExpressionStatement",
                  "src": "8329:65:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 4318,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8434:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8426:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4316,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8426:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8426:10:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4320,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4300,
                        "src": "8438:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4321,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4302,
                        "src": "8447:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4315,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4481,
                      "src": "8405:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8405:49:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4323,
                  "nodeType": "ExpressionStatement",
                  "src": "8405:49:2"
                },
                {
                  "expression": {
                    "id": 4326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4324,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3971,
                      "src": "8465:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 4325,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4302,
                      "src": "8481:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8465:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4327,
                  "nodeType": "ExpressionStatement",
                  "src": "8465:22:2"
                },
                {
                  "expression": {
                    "id": 4332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4328,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3963,
                        "src": "8497:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 4330,
                      "indexExpression": {
                        "id": 4329,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4300,
                        "src": "8507:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8497:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 4331,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4302,
                      "src": "8519:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8497:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4333,
                  "nodeType": "ExpressionStatement",
                  "src": "8497:28:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 4337,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8557:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8549:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4335,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8549:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8549:10:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4339,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4300,
                        "src": "8561:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4340,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4302,
                        "src": "8570:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4334,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6424,
                      "src": "8540:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8540:37:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4342,
                  "nodeType": "EmitStatement",
                  "src": "8535:42:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 4346,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8616:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8608:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4344,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8608:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8608:10:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4348,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4300,
                        "src": "8620:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4349,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4302,
                        "src": "8629:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4343,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4492,
                      "src": "8588:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8588:48:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4351,
                  "nodeType": "ExpressionStatement",
                  "src": "8588:48:2"
                }
              ]
            },
            "documentation": {
              "id": 4298,
              "nodeType": "StructuredDocumentation",
              "src": "7984:265:2",
              "text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
            },
            "id": 4353,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "8263:5:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4300,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8277:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 4353,
                  "src": "8269:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4299,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8269:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4302,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8294:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 4353,
                  "src": "8286:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4301,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8286:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8268:33:2"
            },
            "returnParameters": {
              "id": 4304,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8319:0:2"
            },
            "scope": 4493,
            "src": "8254:389:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4424,
              "nodeType": "Block",
              "src": "9028:511:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4362,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4356,
                          "src": "9046:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4365,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9065:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4364,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9057:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4363,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9057:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9057:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9046:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 4368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9069:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        },
                        "value": "ERC20: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        }
                      ],
                      "id": 4361,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9038:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9038:67:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4370,
                  "nodeType": "ExpressionStatement",
                  "src": "9038:67:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4372,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4356,
                        "src": "9137:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 4375,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9154:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9146:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4373,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9146:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9146:10:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4377,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4358,
                        "src": "9158:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4371,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4481,
                      "src": "9116:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9116:49:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4379,
                  "nodeType": "ExpressionStatement",
                  "src": "9116:49:2"
                },
                {
                  "assignments": [
                    4381
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4381,
                      "mutability": "mutable",
                      "name": "accountBalance",
                      "nameLocation": "9184:14:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 4424,
                      "src": "9176:22:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4380,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9176:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4385,
                  "initialValue": {
                    "baseExpression": {
                      "id": 4382,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3963,
                      "src": "9201:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 4384,
                    "indexExpression": {
                      "id": 4383,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4356,
                      "src": "9211:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9201:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9176:43:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4387,
                          "name": "accountBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4381,
                          "src": "9237:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 4388,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4358,
                          "src": "9255:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9237:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
                        "id": 4390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9263:36:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                          "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                        },
                        "value": "ERC20: burn amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                          "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                        }
                      ],
                      "id": 4386,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9229:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9229:71:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4392,
                  "nodeType": "ExpressionStatement",
                  "src": "9229:71:2"
                },
                {
                  "id": 4401,
                  "nodeType": "UncheckedBlock",
                  "src": "9310:79:2",
                  "statements": [
                    {
                      "expression": {
                        "id": 4399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 4393,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3963,
                            "src": "9334:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 4395,
                          "indexExpression": {
                            "id": 4394,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4356,
                            "src": "9344:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "9334:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4396,
                            "name": "accountBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4381,
                            "src": "9355:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 4397,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4358,
                            "src": "9372:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9355:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9334:44:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 4400,
                      "nodeType": "ExpressionStatement",
                      "src": "9334:44:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 4404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4402,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3971,
                      "src": "9398:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 4403,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4358,
                      "src": "9414:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9398:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4405,
                  "nodeType": "ExpressionStatement",
                  "src": "9398:22:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4407,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4356,
                        "src": "9445:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 4410,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9462:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9454:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4408,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9454:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9454:10:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4412,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4358,
                        "src": "9466:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4406,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6424,
                      "src": "9436:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9436:37:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4414,
                  "nodeType": "EmitStatement",
                  "src": "9431:42:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4416,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4356,
                        "src": "9504:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 4419,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9521:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9513:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4417,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9513:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9513:10:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4421,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4358,
                        "src": "9525:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4415,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4492,
                      "src": "9484:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9484:48:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4423,
                  "nodeType": "ExpressionStatement",
                  "src": "9484:48:2"
                }
              ]
            },
            "documentation": {
              "id": 4354,
              "nodeType": "StructuredDocumentation",
              "src": "8649:309:2",
              "text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
            },
            "id": 4425,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "8972:5:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4356,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8986:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 4425,
                  "src": "8978:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4355,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8978:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4358,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9003:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 4425,
                  "src": "8995:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4357,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8995:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8977:33:2"
            },
            "returnParameters": {
              "id": 4360,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9028:0:2"
            },
            "scope": 4493,
            "src": "8963:576:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4469,
              "nodeType": "Block",
              "src": "10075:257:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4436,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4428,
                          "src": "10093:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4439,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10110:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4438,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10102:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4437,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10102:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10102:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10093:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
                        "id": 4442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10114:38:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        },
                        "value": "ERC20: approve from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        }
                      ],
                      "id": 4435,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10085:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10085:68:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4444,
                  "nodeType": "ExpressionStatement",
                  "src": "10085:68:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4446,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4430,
                          "src": "10171:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4449,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10190:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4448,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10182:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4447,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10182:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10182:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10171:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
                        "id": 4452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10194:36:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        },
                        "value": "ERC20: approve to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        }
                      ],
                      "id": 4445,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10163:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10163:68:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4454,
                  "nodeType": "ExpressionStatement",
                  "src": "10163:68:2"
                },
                {
                  "expression": {
                    "id": 4461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 4455,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3969,
                          "src": "10242:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 4458,
                        "indexExpression": {
                          "id": 4456,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4428,
                          "src": "10254:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10242:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 4459,
                      "indexExpression": {
                        "id": 4457,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4430,
                        "src": "10261:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10242:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4460,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4432,
                      "src": "10272:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10242:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4462,
                  "nodeType": "ExpressionStatement",
                  "src": "10242:36:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4464,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4428,
                        "src": "10302:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4465,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4430,
                        "src": "10309:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4466,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4432,
                        "src": "10318:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4463,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6433,
                      "src": "10293:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10293:32:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4468,
                  "nodeType": "EmitStatement",
                  "src": "10288:37:2"
                }
              ]
            },
            "documentation": {
              "id": 4426,
              "nodeType": "StructuredDocumentation",
              "src": "9545:412:2",
              "text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
            },
            "id": 4470,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "9971:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4433,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4428,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "9997:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 4470,
                  "src": "9989:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4427,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9989:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4430,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "10020:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 4470,
                  "src": "10012:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4429,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10012:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4432,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10045:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 4470,
                  "src": "10037:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4431,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10037:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9979:78:2"
            },
            "returnParameters": {
              "id": 4434,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10075:0:2"
            },
            "scope": 4493,
            "src": "9962:370:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4480,
              "nodeType": "Block",
              "src": "11035:2:2",
              "statements": []
            },
            "documentation": {
              "id": 4471,
              "nodeType": "StructuredDocumentation",
              "src": "10338:573:2",
              "text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 4481,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "10925:20:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4478,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4473,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "10963:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 4481,
                  "src": "10955:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4472,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10955:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4475,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10985:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 4481,
                  "src": "10977:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4474,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10977:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4477,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "11005:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 4481,
                  "src": "10997:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4476,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10997:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10945:72:2"
            },
            "returnParameters": {
              "id": 4479,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11035:0:2"
            },
            "scope": 4493,
            "src": "10916:121:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4491,
              "nodeType": "Block",
              "src": "11743:2:2",
              "statements": []
            },
            "documentation": {
              "id": 4482,
              "nodeType": "StructuredDocumentation",
              "src": "11043:577:2",
              "text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 4492,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfer",
            "nameLocation": "11634:19:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4489,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4484,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "11671:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 4492,
                  "src": "11663:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4483,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11663:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4486,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11693:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 4492,
                  "src": "11685:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4485,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11685:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4488,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "11713:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 4492,
                  "src": "11705:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4487,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11705:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11653:72:2"
            },
            "returnParameters": {
              "id": 4490,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11743:0:2"
            },
            "scope": 4493,
            "src": "11625:120:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 4494,
        "src": "1331:10416:2",
        "usedErrors": []
      }
    ],
    "src": "33:11715:2"
  },
  "bytecode": "60806040523480156200001157600080fd5b5060405162000b5638038062000b568339810160408190526200003491620001c5565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b50505062000282565b82805462000076906200022f565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b600082601f8301126200012057600080fd5b81516001600160401b03808211156200013d576200013d6200026c565b604051601f8301601f19908116603f011681019082821181831017156200016857620001686200026c565b816040528381526020925086838588010111156200018557600080fd5b600091505b83821015620001a957858201830151818301840152908201906200018a565b83821115620001bb5760008385830101525b9695505050505050565b60008060408385031215620001d957600080fd5b82516001600160401b0380821115620001f157600080fd5b620001ff868387016200010e565b935060208501519150808211156200021657600080fd5b5062000225858286016200010e565b9150509250929050565b600181811c908216806200024457607f821691505b602082108114156200026657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6108c480620002926000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c391906107d8565b60405180910390f35b6100df6100da3660046107ae565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610772565b61026e565b604051601281526020016100c3565b6100df6101313660046107ae565b61031d565b6100f361014436600461071d565b6001600160a01b031660009081526020819052604090205490565b6100b6610359565b6100df6101753660046107ae565b610368565b6100df6101883660046107ae565b610401565b6100f361019b36600461073f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d590610853565b80601f016020809104026020016040519081016040528092919081815260200182805461020190610853565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b600061026533848461040e565b50600192915050565b600061027b848484610532565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103055760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610312853385840361040e565b506001949350505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161026591859061035490869061082d565b61040e565b6060600480546101d590610853565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103ea5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102fc565b6103f7338585840361040e565b5060019392505050565b6000610265338484610532565b6001600160a01b0383166104705760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102fc565b6001600160a01b0382166104d15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102fc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105965760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102fc565b6001600160a01b0382166105f85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102fc565b6001600160a01b038316600090815260208190526040902054818110156106705760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102fc565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106a790849061082d565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106f391815260200190565b60405180910390a350505050565b80356001600160a01b038116811461071857600080fd5b919050565b60006020828403121561072f57600080fd5b61073882610701565b9392505050565b6000806040838503121561075257600080fd5b61075b83610701565b915061076960208401610701565b90509250929050565b60008060006060848603121561078757600080fd5b61079084610701565b925061079e60208501610701565b9150604084013590509250925092565b600080604083850312156107c157600080fd5b6107ca83610701565b946020939093013593505050565b600060208083528351808285015260005b81811015610805578581018301518582016040015282016107e9565b81811115610817576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561084e57634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061086757607f821691505b6020821081141561088857634e487b7160e01b600052602260045260246000fd5b5091905056fea264697066735822122061146c22e87e25b0c67c2bef1f86b60a6d480d34bcff69f58da0d3cf8534b03364736f6c63430008070033",
  "bytecodeSha1": "66da243acd69225608a740097de3f10858990e3d",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.7+commit.e28d00a7"
  },
  "contractName": "ERC20",
  "coverageMap": {
    "branches": {
      "13": {},
      "2": {
        "ERC20._approve": {
          "30": [
            10093,
            10112,
            true
          ],
          "31": [
            10171,
            10192,
            true
          ]
        },
        "ERC20._transfer": {
          "32": [
            7400,
            7420,
            true
          ],
          "33": [
            7480,
            7503,
            true
          ],
          "34": [
            7671,
            7694,
            true
          ]
        },
        "ERC20.decreaseAllowance": {
          "29": [
            6574,
            6609,
            true
          ]
        },
        "ERC20.transferFrom": {
          "28": [
            5091,
            5117,
            true
          ]
        }
      },
      "3": {},
      "5": {}
    },
    "statements": {
      "13": {
        "Context._msgSender": {
          "6": [
            659,
            676
          ]
        }
      },
      "2": {
        "ERC20._approve": {
          "18": [
            10085,
            10153
          ],
          "19": [
            10163,
            10231
          ],
          "20": [
            10242,
            10278
          ],
          "21": [
            10288,
            10325
          ]
        },
        "ERC20._transfer": {
          "22": [
            7392,
            7462
          ],
          "23": [
            7472,
            7543
          ],
          "24": [
            7663,
            7737
          ],
          "25": [
            7771,
            7813
          ],
          "26": [
            7833,
            7863
          ],
          "27": [
            7874,
            7914
          ]
        },
        "ERC20.allowance": {
          "3": [
            4002,
            4036
          ]
        },
        "ERC20.approve": {
          "5": [
            4280,
            4319
          ],
          "7": [
            4329,
            4340
          ]
        },
        "ERC20.balanceOf": {
          "2": [
            3429,
            3454
          ]
        },
        "ERC20.decimals": {
          "1": [
            3096,
            3105
          ]
        },
        "ERC20.decreaseAllowance": {
          "14": [
            6566,
            6651
          ],
          "15": [
            6685,
            6752
          ],
          "16": [
            6773,
            6784
          ]
        },
        "ERC20.increaseAllowance": {
          "12": [
            5791,
            5871
          ]
        },
        "ERC20.name": {
          "4": [
            2163,
            2175
          ]
        },
        "ERC20.symbol": {
          "13": [
            2376,
            2390
          ]
        },
        "ERC20.totalSupply": {
          "0": [
            3252,
            3271
          ]
        },
        "ERC20.transfer": {
          "17": [
            3766,
            3808
          ]
        },
        "ERC20.transferFrom": {
          "8": [
            4966,
            5002
          ],
          "9": [
            5083,
            5162
          ],
          "10": [
            5196,
            5253
          ],
          "11": [
            5274,
            5285
          ]
        }
      },
      "3": {},
      "5": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Context",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC20Metadata"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c391906107d8565b60405180910390f35b6100df6100da3660046107ae565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610772565b61026e565b604051601281526020016100c3565b6100df6101313660046107ae565b61031d565b6100f361014436600461071d565b6001600160a01b031660009081526020819052604090205490565b6100b6610359565b6100df6101753660046107ae565b610368565b6100df6101883660046107ae565b610401565b6100f361019b36600461073f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d590610853565b80601f016020809104026020016040519081016040528092919081815260200182805461020190610853565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b600061026533848461040e565b50600192915050565b600061027b848484610532565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103055760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610312853385840361040e565b506001949350505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161026591859061035490869061082d565b61040e565b6060600480546101d590610853565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103ea5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102fc565b6103f7338585840361040e565b5060019392505050565b6000610265338484610532565b6001600160a01b0383166104705760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102fc565b6001600160a01b0382166104d15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102fc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105965760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102fc565b6001600160a01b0382166105f85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102fc565b6001600160a01b038316600090815260208190526040902054818110156106705760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102fc565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106a790849061082d565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106f391815260200190565b60405180910390a350505050565b80356001600160a01b038116811461071857600080fd5b919050565b60006020828403121561072f57600080fd5b61073882610701565b9392505050565b6000806040838503121561075257600080fd5b61075b83610701565b915061076960208401610701565b90509250929050565b60008060006060848603121561078757600080fd5b61079084610701565b925061079e60208501610701565b9150604084013590509250925092565b600080604083850312156107c157600080fd5b6107ca83610701565b946020939093013593505050565b600060208083528351808285015260005b81811015610805578581018301518582016040015282016107e9565b81811115610817576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561084e57634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061086757607f821691505b6020821081141561088857634e487b7160e01b600052602260045260246000fd5b5091905056fea264697066735822122061146c22e87e25b0c67c2bef1f86b60a6d480d34bcff69f58da0d3cf8534b03364736f6c63430008070033",
  "deployedSourceMap": "1331:10416:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2084:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4181:166;;;;;;:::i;:::-;;:::i;:::-;;;1405:14:34;;1398:22;1380:41;;1368:2;1353:18;4181:166:2;1240:187:34;3172:106:2;3259:12;;3172:106;;;5020:25:34;;;5008:2;4993:18;3172:106:2;4874:177:34;4814:478:2;;;;;;:::i;:::-;;:::i;3021:91::-;;;3103:2;5198:36:34;;5186:2;5171:18;3021:91:2;5056:184:34;5687:212:2;;;;;;:::i;:::-;;:::i;3336:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3436:18:2;3410:7;3436:18;;;;;;;;;;;;3336:125;2295:102;;;:::i;6386:405::-;;;;;;:::i;:::-;;:::i;3664:172::-;;;;;;:::i;:::-;;:::i;3894:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4009:18:2;;;3983:7;4009:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3894:149;2084:98;2138:13;2170:5;2163:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2084:98;:::o;4181:166::-;4264:4;4280:39;666:10:13;4303:7:2;4312:6;4280:8;:39::i;:::-;-1:-1:-1;4336:4:2;4181:166;;;;:::o;4814:478::-;4950:4;4966:36;4976:6;4984:9;4995:6;4966:9;:36::i;:::-;-1:-1:-1;;;;;5040:19:2;;5013:24;5040:19;;;:11;:19;;;;;;;;666:10:13;5040:33:2;;;;;;;;5091:26;;;;5083:79;;;;-1:-1:-1;;;5083:79:2;;3450:2:34;5083:79:2;;;3432:21:34;3489:2;3469:18;;;3462:30;3528:34;3508:18;;;3501:62;-1:-1:-1;;;3579:18:34;;;3572:38;3627:19;;5083:79:2;;;;;;;;;5196:57;5205:6;666:10:13;5246:6:2;5227:16;:25;5196:8;:57::i;:::-;-1:-1:-1;5281:4:2;;4814:478;-1:-1:-1;;;;4814:478:2:o;5687:212::-;666:10:13;5775:4:2;5823:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5823:34:2;;;;;;;;;;5775:4;;5791:80;;5814:7;;5823:47;;5860:10;;5823:47;:::i;:::-;5791:8;:80::i;2295:102::-;2351:13;2383:7;2376:14;;;;;:::i;6386:405::-;666:10:13;6479:4:2;6522:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6522:34:2;;;;;;;;;;6574:35;;;;6566:85;;;;-1:-1:-1;;;6566:85:2;;4670:2:34;6566:85:2;;;4652:21:34;4709:2;4689:18;;;4682:30;4748:34;4728:18;;;4721:62;-1:-1:-1;;;4799:18:34;;;4792:35;4844:19;;6566:85:2;4468:401:34;6566:85:2;6685:67;666:10:13;6708:7:2;6736:15;6717:16;:34;6685:8;:67::i;:::-;-1:-1:-1;6780:4:2;;6386:405;-1:-1:-1;;;6386:405:2:o;3664:172::-;3750:4;3766:42;666:10:13;3790:9:2;3801:6;3766:9;:42::i;9962:370::-;-1:-1:-1;;;;;10093:19:2;;10085:68;;;;-1:-1:-1;;;10085:68:2;;4265:2:34;10085:68:2;;;4247:21:34;4304:2;4284:18;;;4277:30;4343:34;4323:18;;;4316:62;-1:-1:-1;;;4394:18:34;;;4387:34;4438:19;;10085:68:2;4063:400:34;10085:68:2;-1:-1:-1;;;;;10171:21:2;;10163:68;;;;-1:-1:-1;;;10163:68:2;;2640:2:34;10163:68:2;;;2622:21:34;2679:2;2659:18;;;2652:30;2718:34;2698:18;;;2691:62;-1:-1:-1;;;2769:18:34;;;2762:32;2811:19;;10163:68:2;2438:398:34;10163:68:2;-1:-1:-1;;;;;10242:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10293:32;;5020:25:34;;;10293:32:2;;4993:18:34;10293:32:2;;;;;;;9962:370;;;:::o;7265:713::-;-1:-1:-1;;;;;7400:20:2;;7392:70;;;;-1:-1:-1;;;7392:70:2;;3859:2:34;7392:70:2;;;3841:21:34;3898:2;3878:18;;;3871:30;3937:34;3917:18;;;3910:62;-1:-1:-1;;;3988:18:34;;;3981:35;4033:19;;7392:70:2;3657:401:34;7392:70:2;-1:-1:-1;;;;;7480:23:2;;7472:71;;;;-1:-1:-1;;;7472:71:2;;2236:2:34;7472:71:2;;;2218:21:34;2275:2;2255:18;;;2248:30;2314:34;2294:18;;;2287:62;-1:-1:-1;;;2365:18:34;;;2358:33;2408:19;;7472:71:2;2034:399:34;7472:71:2;-1:-1:-1;;;;;7636:17:2;;7612:21;7636:17;;;;;;;;;;;7671:23;;;;7663:74;;;;-1:-1:-1;;;7663:74:2;;3043:2:34;7663:74:2;;;3025:21:34;3082:2;3062:18;;;3055:30;3121:34;3101:18;;;3094:62;-1:-1:-1;;;3172:18:34;;;3165:36;3218:19;;7663:74:2;2841:402:34;7663:74:2;-1:-1:-1;;;;;7771:17:2;;;:9;:17;;;;;;;;;;;7791:22;;;7771:42;;7833:20;;;;;;;;:30;;7807:6;;7771:9;7833:30;;7807:6;;7833:30;:::i;:::-;;;;;;;;7896:9;-1:-1:-1;;;;;7879:35:2;7888:6;-1:-1:-1;;;;;7879:35:2;;7907:6;7879:35;;;;5020:25:34;;5008:2;4993:18;;4874:177;7879:35:2;;;;;;;;7382:596;7265:713;;;:::o;14:173:34:-;82:20;;-1:-1:-1;;;;;131:31:34;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:34:o;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;383:260;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:52;;;810:1;807;800:12;762:52;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;648:328;;;;;:::o;981:254::-;1049:6;1057;1110:2;1098:9;1089:7;1085:23;1081:32;1078:52;;;1126:1;1123;1116:12;1078:52;1149:29;1168:9;1149:29;:::i;:::-;1139:39;1225:2;1210:18;;;;1197:32;;-1:-1:-1;;;981:254:34:o;1432:597::-;1544:4;1573:2;1602;1591:9;1584:21;1634:6;1628:13;1677:6;1672:2;1661:9;1657:18;1650:34;1702:1;1712:140;1726:6;1723:1;1720:13;1712:140;;;1821:14;;;1817:23;;1811:30;1787:17;;;1806:2;1783:26;1776:66;1741:10;;1712:140;;;1870:6;1867:1;1864:13;1861:91;;;1940:1;1935:2;1926:6;1915:9;1911:22;1907:31;1900:42;1861:91;-1:-1:-1;2013:2:34;1992:15;-1:-1:-1;;1988:29:34;1973:45;;;;2020:2;1969:54;;1432:597;-1:-1:-1;;;1432:597:34:o;5245:225::-;5285:3;5316:1;5312:6;5309:1;5306:13;5303:136;;;5361:10;5356:3;5352:20;5349:1;5342:31;5396:4;5393:1;5386:15;5424:4;5421:1;5414:15;5303:136;-1:-1:-1;5455:9:34;;5245:225::o;5475:380::-;5554:1;5550:12;;;;5597;;;5618:61;;5672:4;5664:6;5660:17;5650:27;;5618:61;5725:2;5717:6;5714:14;5694:18;5691:38;5688:161;;;5771:10;5766:3;5762:20;5759:1;5752:31;5806:4;5803:1;5796:15;5834:4;5831:1;5824:15;5688:161;;5475:380;;;:::o",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "constructor": {
        "details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "offset": [
    1331,
    11747
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x31D JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x359 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x368 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x73F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x853 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x201 SWAP1 PUSH2 0x853 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x223 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x231 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27B DUP5 DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x305 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x312 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x265 SWAP2 DUP6 SWAP1 PUSH2 0x354 SWAP1 DUP7 SWAP1 PUSH2 0x82D JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x853 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x3F7 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x470 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x596 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6A7 SWAP1 DUP5 SWAP1 PUSH2 0x82D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6F3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x718 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x72F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x738 DUP3 PUSH2 0x701 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x752 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x75B DUP4 PUSH2 0x701 JUMP JUMPDEST SWAP2 POP PUSH2 0x769 PUSH1 0x20 DUP5 ADD PUSH2 0x701 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x787 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x790 DUP5 PUSH2 0x701 JUMP JUMPDEST SWAP3 POP PUSH2 0x79E PUSH1 0x20 DUP6 ADD PUSH2 0x701 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7CA DUP4 PUSH2 0x701 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x805 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7E9 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x817 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x84E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x867 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x888 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0x146C 0x22 0xE8 PUSH31 0x25B0C67C2BEF1F86B60A6D480D34BCFF69F58DA0D3CF8534B03364736F6C63 NUMBER STOP ADDMOD SMOD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "6": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "DUP1",
      "path": "2"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "REVERT",
      "path": "2"
    },
    "16": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "17": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "POP",
      "path": "2"
    },
    "18": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "21": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "LT",
      "path": "2"
    },
    "22": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA9"
    },
    "25": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "26": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "29": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "SHR",
      "path": "2"
    },
    "32": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "DUP1",
      "path": "2"
    },
    "33": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x39509351"
    },
    "38": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "GT",
      "path": "2"
    },
    "39": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "43": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "DUP1",
      "path": "2"
    },
    "44": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x39509351"
    },
    "49": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "EQ",
      "path": "2"
    },
    "50": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x123"
    },
    "53": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "54": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "DUP1",
      "path": "2"
    },
    "55": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x70A08231"
    },
    "60": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "EQ",
      "path": "2"
    },
    "61": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x136"
    },
    "64": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "65": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "DUP1",
      "path": "2"
    },
    "66": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x95D89B41"
    },
    "71": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "EQ",
      "path": "2"
    },
    "72": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15F"
    },
    "75": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "76": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "DUP1",
      "path": "2"
    },
    "77": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA457C2D7"
    },
    "82": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "EQ",
      "path": "2"
    },
    "83": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x167"
    },
    "86": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "87": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "DUP1",
      "path": "2"
    },
    "88": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA9059CBB"
    },
    "93": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "EQ",
      "path": "2"
    },
    "94": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17A"
    },
    "97": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "98": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "DUP1",
      "path": "2"
    },
    "99": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xDD62ED3E"
    },
    "104": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "EQ",
      "path": "2"
    },
    "105": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18D"
    },
    "108": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "109": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "DUP1",
      "path": "2"
    },
    "112": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "REVERT",
      "path": "2"
    },
    "113": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "114": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "DUP1",
      "path": "2"
    },
    "115": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6FDDE03"
    },
    "120": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "EQ",
      "path": "2"
    },
    "121": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAE"
    },
    "124": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "125": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "DUP1",
      "path": "2"
    },
    "126": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x95EA7B3"
    },
    "131": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "EQ",
      "path": "2"
    },
    "132": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCC"
    },
    "135": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "136": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "DUP1",
      "path": "2"
    },
    "137": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x18160DDD"
    },
    "142": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "EQ",
      "path": "2"
    },
    "143": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEF"
    },
    "146": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "147": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "DUP1",
      "path": "2"
    },
    "148": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x23B872DD"
    },
    "153": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "EQ",
      "path": "2"
    },
    "154": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x101"
    },
    "157": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "158": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "DUP1",
      "path": "2"
    },
    "159": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x313CE567"
    },
    "164": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "EQ",
      "path": "2"
    },
    "165": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x114"
    },
    "168": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "169": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "170": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "172": {
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "DUP1",
      "path": "2"
    },
    "173": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1331,
        11747
      ],
      "op": "REVERT",
      "path": "2"
    },
    "174": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "175": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB6"
    },
    "178": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C6"
    },
    "181": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2084,
        2182
      ],
      "op": "JUMP",
      "path": "2"
    },
    "182": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "183": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "185": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "186": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC3"
    },
    "189": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "190": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "191": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7D8"
    },
    "194": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2084,
        2182
      ],
      "op": "JUMP",
      "path": "2"
    },
    "195": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "196": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "198": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "199": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "DUP1",
      "path": "2"
    },
    "200": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "201": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "SUB",
      "path": "2"
    },
    "202": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "203": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "RETURN",
      "path": "2"
    },
    "204": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "205": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDF"
    },
    "208": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDA"
    },
    "211": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "212": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "214": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AE"
    },
    "217": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4181,
        4347
      ],
      "op": "JUMP",
      "path": "2"
    },
    "218": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "219": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x258"
    },
    "222": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4181,
        4347
      ],
      "op": "JUMP",
      "path": "2"
    },
    "223": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "224": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "226": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "227": {
      "op": "SWAP1"
    },
    "228": {
      "op": "ISZERO"
    },
    "229": {
      "op": "ISZERO"
    },
    "230": {
      "op": "DUP2"
    },
    "231": {
      "op": "MSTORE"
    },
    "232": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "234": {
      "op": "ADD"
    },
    "235": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC3"
    },
    "238": {
      "op": "JUMP"
    },
    "239": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3172,
        3278
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "240": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3259,
        3271
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 0,
      "value": "0x2"
    },
    "242": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3259,
        3271
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "243": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3172,
        3278
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "244": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3172,
        3278
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "246": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3172,
        3278
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "247": {
      "op": "SWAP1"
    },
    "248": {
      "op": "DUP2"
    },
    "249": {
      "op": "MSTORE"
    },
    "250": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "252": {
      "op": "ADD"
    },
    "253": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3172,
        3278
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC3"
    },
    "256": {
      "op": "JUMP"
    },
    "257": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4814,
        5292
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "258": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4814,
        5292
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDF"
    },
    "261": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4814,
        5292
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10F"
    },
    "264": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4814,
        5292
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "265": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4814,
        5292
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "267": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4814,
        5292
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x772"
    },
    "270": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4814,
        5292
      ],
      "op": "JUMP",
      "path": "2"
    },
    "271": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4814,
        5292
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "272": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4814,
        5292
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26E"
    },
    "275": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4814,
        5292
      ],
      "op": "JUMP",
      "path": "2"
    },
    "276": {
      "fn": "ERC20.decimals",
      "offset": [
        3021,
        3112
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "277": {
      "fn": "ERC20.decimals",
      "offset": [
        3021,
        3112
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "279": {
      "fn": "ERC20.decimals",
      "offset": [
        3021,
        3112
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "280": {
      "fn": "ERC20.decimals",
      "offset": [
        3103,
        3105
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 1,
      "value": "0x12"
    },
    "282": {
      "op": "DUP2"
    },
    "283": {
      "op": "MSTORE"
    },
    "284": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "286": {
      "op": "ADD"
    },
    "287": {
      "fn": "ERC20.decimals",
      "offset": [
        3021,
        3112
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC3"
    },
    "290": {
      "op": "JUMP"
    },
    "291": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5899
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "292": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5899
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDF"
    },
    "295": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5899
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x131"
    },
    "298": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5899
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "299": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5899
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "301": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5899
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AE"
    },
    "304": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5687,
        5899
      ],
      "op": "JUMP",
      "path": "2"
    },
    "305": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5899
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "306": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5899
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x31D"
    },
    "309": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5687,
        5899
      ],
      "op": "JUMP",
      "path": "2"
    },
    "310": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3336,
        3461
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "311": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3336,
        3461
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF3"
    },
    "314": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3336,
        3461
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x144"
    },
    "317": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3336,
        3461
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "318": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3336,
        3461
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "320": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3336,
        3461
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x71D"
    },
    "323": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3336,
        3461
      ],
      "op": "JUMP",
      "path": "2"
    },
    "324": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3336,
        3461
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "329": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "331": {
      "op": "SHL"
    },
    "332": {
      "op": "SUB"
    },
    "333": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3436,
        3454
      ],
      "op": "AND",
      "path": "2",
      "statement": 2
    },
    "334": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3410,
        3417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "336": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3436,
        3454
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "337": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3436,
        3454
      ],
      "op": "DUP2",
      "path": "2"
    },
    "338": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3436,
        3454
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "339": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3436,
        3454
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "341": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3436,
        3454
      ],
      "op": "DUP2",
      "path": "2"
    },
    "342": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3436,
        3454
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "343": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3436,
        3454
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "344": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3436,
        3454
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "346": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3436,
        3454
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "347": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3436,
        3454
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "348": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3436,
        3454
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "349": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3436,
        3454
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "350": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3336,
        3461
      ],
      "op": "JUMP",
      "path": "2"
    },
    "351": {
      "fn": "ERC20.symbol",
      "offset": [
        2295,
        2397
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "352": {
      "fn": "ERC20.symbol",
      "offset": [
        2295,
        2397
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB6"
    },
    "355": {
      "fn": "ERC20.symbol",
      "offset": [
        2295,
        2397
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x359"
    },
    "358": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2295,
        2397
      ],
      "op": "JUMP",
      "path": "2"
    },
    "359": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6386,
        6791
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "360": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6386,
        6791
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDF"
    },
    "363": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6386,
        6791
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x175"
    },
    "366": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6386,
        6791
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "367": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6386,
        6791
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "369": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6386,
        6791
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AE"
    },
    "372": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6386,
        6791
      ],
      "op": "JUMP",
      "path": "2"
    },
    "373": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6386,
        6791
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "374": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6386,
        6791
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x368"
    },
    "377": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6386,
        6791
      ],
      "op": "JUMP",
      "path": "2"
    },
    "378": {
      "fn": "ERC20.transfer",
      "offset": [
        3664,
        3836
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "379": {
      "fn": "ERC20.transfer",
      "offset": [
        3664,
        3836
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDF"
    },
    "382": {
      "fn": "ERC20.transfer",
      "offset": [
        3664,
        3836
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x188"
    },
    "385": {
      "fn": "ERC20.transfer",
      "offset": [
        3664,
        3836
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "386": {
      "fn": "ERC20.transfer",
      "offset": [
        3664,
        3836
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "388": {
      "fn": "ERC20.transfer",
      "offset": [
        3664,
        3836
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AE"
    },
    "391": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3664,
        3836
      ],
      "op": "JUMP",
      "path": "2"
    },
    "392": {
      "fn": "ERC20.transfer",
      "offset": [
        3664,
        3836
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "393": {
      "fn": "ERC20.transfer",
      "offset": [
        3664,
        3836
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x401"
    },
    "396": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3664,
        3836
      ],
      "op": "JUMP",
      "path": "2"
    },
    "397": {
      "fn": "ERC20.allowance",
      "offset": [
        3894,
        4043
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "398": {
      "fn": "ERC20.allowance",
      "offset": [
        3894,
        4043
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF3"
    },
    "401": {
      "fn": "ERC20.allowance",
      "offset": [
        3894,
        4043
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19B"
    },
    "404": {
      "fn": "ERC20.allowance",
      "offset": [
        3894,
        4043
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "405": {
      "fn": "ERC20.allowance",
      "offset": [
        3894,
        4043
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "407": {
      "fn": "ERC20.allowance",
      "offset": [
        3894,
        4043
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x73F"
    },
    "410": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3894,
        4043
      ],
      "op": "JUMP",
      "path": "2"
    },
    "411": {
      "fn": "ERC20.allowance",
      "offset": [
        3894,
        4043
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "416": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "418": {
      "op": "SHL"
    },
    "419": {
      "op": "SUB"
    },
    "420": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 3
    },
    "421": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "DUP3",
      "path": "2"
    },
    "422": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "AND",
      "path": "2"
    },
    "423": {
      "fn": "ERC20.allowance",
      "offset": [
        3983,
        3990
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "425": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "426": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "DUP2",
      "path": "2"
    },
    "427": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "428": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4020
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "430": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "432": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "433": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "DUP2",
      "path": "2"
    },
    "434": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "435": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "437": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "DUP1",
      "path": "2"
    },
    "438": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "DUP4",
      "path": "2"
    },
    "439": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4027
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "440": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4036
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "441": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4036
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "442": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4036
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "443": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4036
      ],
      "op": "AND",
      "path": "2"
    },
    "444": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4036
      ],
      "op": "DUP3",
      "path": "2"
    },
    "445": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4036
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "446": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4036
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "447": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4036
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "448": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4036
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "449": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4036
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "450": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4036
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "451": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4036
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "452": {
      "fn": "ERC20.allowance",
      "offset": [
        4009,
        4036
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "453": {
      "fn": "ERC20.allowance",
      "offset": [
        3894,
        4043
      ],
      "op": "JUMP",
      "path": "2"
    },
    "454": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "455": {
      "fn": "ERC20.name",
      "offset": [
        2138,
        2151
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "457": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2175
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 4,
      "value": "0x3"
    },
    "459": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP1",
      "path": "2"
    },
    "460": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "461": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D5"
    },
    "464": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "465": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x853"
    },
    "468": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2163,
        2175
      ],
      "op": "JUMP",
      "path": "2"
    },
    "469": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "470": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP1",
      "path": "2"
    },
    "471": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "473": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "ADD",
      "path": "2"
    },
    "474": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "476": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP1",
      "path": "2"
    },
    "477": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "478": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DIV",
      "path": "2"
    },
    "479": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "MUL",
      "path": "2"
    },
    "480": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "482": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "ADD",
      "path": "2"
    },
    "483": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "485": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "486": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "487": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP2",
      "path": "2"
    },
    "488": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "ADD",
      "path": "2"
    },
    "489": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "491": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "492": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP1",
      "path": "2"
    },
    "493": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "494": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "495": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "496": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP2",
      "path": "2"
    },
    "497": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP2",
      "path": "2"
    },
    "498": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "499": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "501": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "ADD",
      "path": "2"
    },
    "502": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP3",
      "path": "2"
    },
    "503": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP1",
      "path": "2"
    },
    "504": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "505": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x201"
    },
    "508": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "509": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x853"
    },
    "512": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2163,
        2175
      ],
      "op": "JUMP",
      "path": "2"
    },
    "513": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "514": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP1",
      "path": "2"
    },
    "515": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "516": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x24E"
    },
    "519": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "520": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP1",
      "path": "2"
    },
    "521": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "523": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "LT",
      "path": "2"
    },
    "524": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x223"
    },
    "527": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "528": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "531": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP1",
      "path": "2"
    },
    "532": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP4",
      "path": "2"
    },
    "533": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "534": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DIV",
      "path": "2"
    },
    "535": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "MUL",
      "path": "2"
    },
    "536": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP4",
      "path": "2"
    },
    "537": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "538": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "539": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "541": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "ADD",
      "path": "2"
    },
    "542": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "543": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x24E"
    },
    "546": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "JUMP",
      "path": "2"
    },
    "547": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "548": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP3",
      "path": "2"
    },
    "549": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "ADD",
      "path": "2"
    },
    "550": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "551": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "552": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "554": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "555": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "557": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "559": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "560": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "561": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "562": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP2",
      "path": "2"
    },
    "563": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "564": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP2",
      "path": "2"
    },
    "565": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "566": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "567": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "569": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "ADD",
      "path": "2"
    },
    "570": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "571": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "573": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "ADD",
      "path": "2"
    },
    "574": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP1",
      "path": "2"
    },
    "575": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP4",
      "path": "2"
    },
    "576": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "GT",
      "path": "2"
    },
    "577": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x231"
    },
    "580": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "581": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP3",
      "path": "2"
    },
    "582": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "583": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SUB",
      "path": "2"
    },
    "584": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "586": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "AND",
      "path": "2"
    },
    "587": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "DUP3",
      "path": "2"
    },
    "588": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "ADD",
      "path": "2"
    },
    "589": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "590": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "591": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "POP",
      "path": "2"
    },
    "592": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "POP",
      "path": "2"
    },
    "593": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "POP",
      "path": "2"
    },
    "594": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "POP",
      "path": "2"
    },
    "595": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "POP",
      "path": "2"
    },
    "596": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "597": {
      "fn": "ERC20.name",
      "offset": [
        2163,
        2175
      ],
      "op": "POP",
      "path": "2"
    },
    "598": {
      "fn": "ERC20.name",
      "offset": [
        2084,
        2182
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "599": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        2084,
        2182
      ],
      "op": "JUMP",
      "path": "2"
    },
    "600": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "601": {
      "fn": "ERC20.approve",
      "offset": [
        4264,
        4268
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "603": {
      "fn": "ERC20.approve",
      "offset": [
        4280,
        4319
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 5,
      "value": "0x265"
    },
    "606": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "13",
      "statement": 6
    },
    "607": {
      "fn": "ERC20.approve",
      "offset": [
        4303,
        4310
      ],
      "op": "DUP5",
      "path": "2"
    },
    "608": {
      "fn": "ERC20.approve",
      "offset": [
        4312,
        4318
      ],
      "op": "DUP5",
      "path": "2"
    },
    "609": {
      "fn": "ERC20.approve",
      "offset": [
        4280,
        4288
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x40E"
    },
    "612": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4280,
        4319
      ],
      "op": "JUMP",
      "path": "2"
    },
    "613": {
      "fn": "ERC20.approve",
      "offset": [
        4280,
        4319
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "614": {
      "op": "POP"
    },
    "615": {
      "fn": "ERC20.approve",
      "offset": [
        4336,
        4340
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 7,
      "value": "0x1"
    },
    "617": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "618": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "619": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "POP",
      "path": "2"
    },
    "620": {
      "fn": "ERC20.approve",
      "offset": [
        4181,
        4347
      ],
      "op": "POP",
      "path": "2"
    },
    "621": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        4181,
        4347
      ],
      "op": "JUMP",
      "path": "2"
    },
    "622": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4814,
        5292
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "623": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4950,
        4954
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "625": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4966,
        5002
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 8,
      "value": "0x27B"
    },
    "628": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4976,
        4982
      ],
      "op": "DUP5",
      "path": "2"
    },
    "629": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4984,
        4993
      ],
      "op": "DUP5",
      "path": "2"
    },
    "630": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4995,
        5001
      ],
      "op": "DUP5",
      "path": "2"
    },
    "631": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4966,
        4975
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x532"
    },
    "634": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4966,
        5002
      ],
      "op": "JUMP",
      "path": "2"
    },
    "635": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4966,
        5002
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "640": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "642": {
      "op": "SHL"
    },
    "643": {
      "op": "SUB"
    },
    "644": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5059
      ],
      "op": "DUP5",
      "path": "2"
    },
    "645": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5059
      ],
      "op": "AND",
      "path": "2"
    },
    "646": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5013,
        5037
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "648": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5059
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "649": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5059
      ],
      "op": "DUP2",
      "path": "2"
    },
    "650": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5059
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "651": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5051
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "653": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5059
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "655": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5059
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "656": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5059
      ],
      "op": "DUP2",
      "path": "2"
    },
    "657": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5059
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "658": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5059
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "660": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5059
      ],
      "op": "DUP1",
      "path": "2"
    },
    "661": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5059
      ],
      "op": "DUP4",
      "path": "2"
    },
    "662": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5059
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "663": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "13"
    },
    "664": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5073
      ],
      "op": "DUP5",
      "path": "2"
    },
    "665": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5073
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "666": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5073
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "667": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5073
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "668": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5073
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "669": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5073
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "670": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5073
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "671": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5040,
        5073
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "672": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5091,
        5117
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 9
    },
    "673": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5091,
        5117
      ],
      "op": "DUP2",
      "path": "2"
    },
    "674": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5091,
        5117
      ],
      "op": "LT",
      "path": "2"
    },
    "675": {
      "branch": 28,
      "fn": "ERC20.transferFrom",
      "offset": [
        5091,
        5117
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "676": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x305"
    },
    "679": {
      "branch": 28,
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "680": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "682": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "683": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "687": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "689": {
      "op": "SHL"
    },
    "690": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "DUP2",
      "path": "2"
    },
    "691": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "692": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "694": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "696": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "DUP3",
      "path": "2"
    },
    "697": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "ADD",
      "path": "2"
    },
    "698": {
      "op": "MSTORE"
    },
    "699": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "701": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "703": {
      "op": "DUP3"
    },
    "704": {
      "op": "ADD"
    },
    "705": {
      "op": "MSTORE"
    },
    "706": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732061"
    },
    "739": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "741": {
      "op": "DUP3"
    },
    "742": {
      "op": "ADD"
    },
    "743": {
      "op": "MSTORE"
    },
    "744": {
      "op": "PUSH8",
      "value": "0x6C6C6F77616E6365"
    },
    "753": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "755": {
      "op": "SHL"
    },
    "756": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "758": {
      "op": "DUP3"
    },
    "759": {
      "op": "ADD"
    },
    "760": {
      "op": "MSTORE"
    },
    "761": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "763": {
      "op": "ADD"
    },
    "764": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "765": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "767": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "768": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "DUP1",
      "path": "2"
    },
    "769": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "770": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "SUB",
      "path": "2"
    },
    "771": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "772": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "2"
    },
    "773": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5162
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "774": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5196,
        5253
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 10,
      "value": "0x312"
    },
    "777": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5205,
        5211
      ],
      "op": "DUP6",
      "path": "2"
    },
    "778": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "13"
    },
    "779": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5246,
        5252
      ],
      "op": "DUP6",
      "path": "2"
    },
    "780": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5227,
        5243
      ],
      "op": "DUP5",
      "path": "2"
    },
    "781": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5227,
        5252
      ],
      "op": "SUB",
      "path": "2"
    },
    "782": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5196,
        5204
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x40E"
    },
    "785": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5196,
        5253
      ],
      "op": "JUMP",
      "path": "2"
    },
    "786": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5196,
        5253
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "787": {
      "op": "POP"
    },
    "788": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5281,
        5285
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 11,
      "value": "0x1"
    },
    "790": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5281,
        5285
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "791": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4814,
        5292
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "792": {
      "op": "POP"
    },
    "793": {
      "op": "POP"
    },
    "794": {
      "op": "POP"
    },
    "795": {
      "op": "POP"
    },
    "796": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        4814,
        5292
      ],
      "op": "JUMP",
      "path": "2"
    },
    "797": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5899
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "798": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "13"
    },
    "799": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5775,
        5779
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "801": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5848
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 12
    },
    "802": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5848
      ],
      "op": "DUP2",
      "path": "2"
    },
    "803": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5848
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "804": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5834
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "806": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5848
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "808": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5848
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "809": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5848
      ],
      "op": "DUP2",
      "path": "2"
    },
    "810": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5848
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "811": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5848
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "813": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5848
      ],
      "op": "DUP1",
      "path": "2"
    },
    "814": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5848
      ],
      "op": "DUP4",
      "path": "2"
    },
    "815": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5848
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "820": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "822": {
      "op": "SHL"
    },
    "823": {
      "op": "SUB"
    },
    "824": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5857
      ],
      "op": "DUP8",
      "path": "2"
    },
    "825": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5857
      ],
      "op": "AND",
      "path": "2"
    },
    "826": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5857
      ],
      "op": "DUP5",
      "path": "2"
    },
    "827": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5857
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "828": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5857
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "829": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5857
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "830": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5857
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "831": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5857
      ],
      "op": "DUP2",
      "path": "2"
    },
    "832": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5857
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "833": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5857
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "834": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5775,
        5779
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "835": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5775,
        5779
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "836": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5791,
        5871
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x265"
    },
    "839": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5791,
        5871
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "840": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5814,
        5821
      ],
      "op": "DUP6",
      "path": "2"
    },
    "841": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5814,
        5821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "842": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5870
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x354"
    },
    "845": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5870
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "846": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5860,
        5870
      ],
      "op": "DUP7",
      "path": "2"
    },
    "847": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5860,
        5870
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "848": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5870
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x82D"
    },
    "851": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5823,
        5870
      ],
      "op": "JUMP",
      "path": "2"
    },
    "852": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5870
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "853": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5791,
        5799
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x40E"
    },
    "856": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5791,
        5871
      ],
      "op": "JUMP",
      "path": "2"
    },
    "857": {
      "fn": "ERC20.symbol",
      "offset": [
        2295,
        2397
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "858": {
      "fn": "ERC20.symbol",
      "offset": [
        2351,
        2364
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "860": {
      "fn": "ERC20.symbol",
      "offset": [
        2383,
        2390
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 13,
      "value": "0x4"
    },
    "862": {
      "fn": "ERC20.symbol",
      "offset": [
        2376,
        2390
      ],
      "op": "DUP1",
      "path": "2"
    },
    "863": {
      "fn": "ERC20.symbol",
      "offset": [
        2376,
        2390
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "864": {
      "fn": "ERC20.symbol",
      "offset": [
        2376,
        2390
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D5"
    },
    "867": {
      "fn": "ERC20.symbol",
      "offset": [
        2376,
        2390
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "868": {
      "fn": "ERC20.symbol",
      "offset": [
        2376,
        2390
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x853"
    },
    "871": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2376,
        2390
      ],
      "op": "JUMP",
      "path": "2"
    },
    "872": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6386,
        6791
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "873": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "13"
    },
    "874": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6479,
        6483
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "876": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6547
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "877": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6547
      ],
      "op": "DUP2",
      "path": "2"
    },
    "878": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6547
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "879": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6533
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "881": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6547
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "883": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6547
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "884": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6547
      ],
      "op": "DUP2",
      "path": "2"
    },
    "885": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6547
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "886": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6547
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "888": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6547
      ],
      "op": "DUP1",
      "path": "2"
    },
    "889": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6547
      ],
      "op": "DUP4",
      "path": "2"
    },
    "890": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6547
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "891": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "895": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "897": {
      "op": "SHL"
    },
    "898": {
      "op": "SUB"
    },
    "899": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6556
      ],
      "op": "DUP7",
      "path": "2"
    },
    "900": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6556
      ],
      "op": "AND",
      "path": "2"
    },
    "901": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6556
      ],
      "op": "DUP5",
      "path": "2"
    },
    "902": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6556
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "903": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6556
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "904": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6556
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "905": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6556
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "906": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6556
      ],
      "op": "DUP2",
      "path": "2"
    },
    "907": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6556
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "908": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6522,
        6556
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "909": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6574,
        6609
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 14
    },
    "910": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6574,
        6609
      ],
      "op": "DUP2",
      "path": "2"
    },
    "911": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6574,
        6609
      ],
      "op": "LT",
      "path": "2"
    },
    "912": {
      "branch": 29,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6574,
        6609
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "913": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6566,
        6651
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3EA"
    },
    "916": {
      "branch": 29,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6566,
        6651
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "917": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6566,
        6651
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "919": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6566,
        6651
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "920": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "924": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "926": {
      "op": "SHL"
    },
    "927": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6566,
        6651
      ],
      "op": "DUP2",
      "path": "2"
    },
    "928": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6566,
        6651
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "929": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "931": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6566,
        6651
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "933": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6566,
        6651
      ],
      "op": "DUP3",
      "path": "2"
    },
    "934": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6566,
        6651
      ],
      "op": "ADD",
      "path": "2"
    },
    "935": {
      "op": "MSTORE"
    },
    "936": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "938": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "940": {
      "op": "DUP3"
    },
    "941": {
      "op": "ADD"
    },
    "942": {
      "op": "MSTORE"
    },
    "943": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "976": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "978": {
      "op": "DUP3"
    },
    "979": {
      "op": "ADD"
    },
    "980": {
      "op": "MSTORE"
    },
    "981": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "987": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "989": {
      "op": "SHL"
    },
    "990": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "992": {
      "op": "DUP3"
    },
    "993": {
      "op": "ADD"
    },
    "994": {
      "op": "MSTORE"
    },
    "995": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "997": {
      "op": "ADD"
    },
    "998": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6566,
        6651
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FC"
    },
    "1001": {
      "op": "JUMP"
    },
    "1002": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6566,
        6651
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1003": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6685,
        6752
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 15,
      "value": "0x3F7"
    },
    "1006": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1007": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6708,
        6715
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1008": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6736,
        6751
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1009": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6717,
        6733
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1010": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6717,
        6751
      ],
      "op": "SUB",
      "path": "2"
    },
    "1011": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6685,
        6693
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x40E"
    },
    "1014": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6685,
        6752
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1015": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6685,
        6752
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1016": {
      "op": "POP"
    },
    "1017": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6780,
        6784
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 16,
      "value": "0x1"
    },
    "1019": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6780,
        6784
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1020": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6386,
        6791
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1021": {
      "op": "POP"
    },
    "1022": {
      "op": "POP"
    },
    "1023": {
      "op": "POP"
    },
    "1024": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "o",
      "offset": [
        6386,
        6791
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1025": {
      "fn": "ERC20.transfer",
      "offset": [
        3664,
        3836
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1026": {
      "fn": "ERC20.transfer",
      "offset": [
        3750,
        3754
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1028": {
      "fn": "ERC20.transfer",
      "offset": [
        3766,
        3808
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 17,
      "value": "0x265"
    },
    "1031": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1032": {
      "fn": "ERC20.transfer",
      "offset": [
        3790,
        3799
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1033": {
      "fn": "ERC20.transfer",
      "offset": [
        3801,
        3807
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1034": {
      "fn": "ERC20.transfer",
      "offset": [
        3766,
        3775
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x532"
    },
    "1037": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3766,
        3808
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1038": {
      "fn": "ERC20._approve",
      "offset": [
        9962,
        10332
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1039": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1041": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1043": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1045": {
      "op": "SHL"
    },
    "1046": {
      "op": "SUB"
    },
    "1047": {
      "fn": "ERC20._approve",
      "offset": [
        10093,
        10112
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 18
    },
    "1048": {
      "branch": 30,
      "fn": "ERC20._approve",
      "offset": [
        10093,
        10112
      ],
      "op": "AND",
      "path": "2"
    },
    "1049": {
      "fn": "ERC20._approve",
      "offset": [
        10085,
        10153
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x470"
    },
    "1052": {
      "branch": 30,
      "fn": "ERC20._approve",
      "offset": [
        10085,
        10153
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1053": {
      "fn": "ERC20._approve",
      "offset": [
        10085,
        10153
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1055": {
      "fn": "ERC20._approve",
      "offset": [
        10085,
        10153
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1056": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1060": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1062": {
      "op": "SHL"
    },
    "1063": {
      "fn": "ERC20._approve",
      "offset": [
        10085,
        10153
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1064": {
      "fn": "ERC20._approve",
      "offset": [
        10085,
        10153
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1065": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1067": {
      "fn": "ERC20._approve",
      "offset": [
        10085,
        10153
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1069": {
      "fn": "ERC20._approve",
      "offset": [
        10085,
        10153
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1070": {
      "fn": "ERC20._approve",
      "offset": [
        10085,
        10153
      ],
      "op": "ADD",
      "path": "2"
    },
    "1071": {
      "op": "MSTORE"
    },
    "1072": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1074": {
      "op": "DUP1"
    },
    "1075": {
      "op": "DUP3"
    },
    "1076": {
      "op": "ADD"
    },
    "1077": {
      "op": "MSTORE"
    },
    "1078": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "1111": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1113": {
      "op": "DUP3"
    },
    "1114": {
      "op": "ADD"
    },
    "1115": {
      "op": "MSTORE"
    },
    "1116": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "1121": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1123": {
      "op": "SHL"
    },
    "1124": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1126": {
      "op": "DUP3"
    },
    "1127": {
      "op": "ADD"
    },
    "1128": {
      "op": "MSTORE"
    },
    "1129": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1131": {
      "op": "ADD"
    },
    "1132": {
      "fn": "ERC20._approve",
      "offset": [
        10085,
        10153
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FC"
    },
    "1135": {
      "op": "JUMP"
    },
    "1136": {
      "fn": "ERC20._approve",
      "offset": [
        10085,
        10153
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1141": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1143": {
      "op": "SHL"
    },
    "1144": {
      "op": "SUB"
    },
    "1145": {
      "fn": "ERC20._approve",
      "offset": [
        10171,
        10192
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 19
    },
    "1146": {
      "branch": 31,
      "fn": "ERC20._approve",
      "offset": [
        10171,
        10192
      ],
      "op": "AND",
      "path": "2"
    },
    "1147": {
      "fn": "ERC20._approve",
      "offset": [
        10163,
        10231
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4D1"
    },
    "1150": {
      "branch": 31,
      "fn": "ERC20._approve",
      "offset": [
        10163,
        10231
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1151": {
      "fn": "ERC20._approve",
      "offset": [
        10163,
        10231
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1153": {
      "fn": "ERC20._approve",
      "offset": [
        10163,
        10231
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1154": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1158": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1160": {
      "op": "SHL"
    },
    "1161": {
      "fn": "ERC20._approve",
      "offset": [
        10163,
        10231
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1162": {
      "fn": "ERC20._approve",
      "offset": [
        10163,
        10231
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1163": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1165": {
      "fn": "ERC20._approve",
      "offset": [
        10163,
        10231
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1167": {
      "fn": "ERC20._approve",
      "offset": [
        10163,
        10231
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1168": {
      "fn": "ERC20._approve",
      "offset": [
        10163,
        10231
      ],
      "op": "ADD",
      "path": "2"
    },
    "1169": {
      "op": "MSTORE"
    },
    "1170": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "1172": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1174": {
      "op": "DUP3"
    },
    "1175": {
      "op": "ADD"
    },
    "1176": {
      "op": "MSTORE"
    },
    "1177": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "1210": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1212": {
      "op": "DUP3"
    },
    "1213": {
      "op": "ADD"
    },
    "1214": {
      "op": "MSTORE"
    },
    "1215": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "1218": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "1220": {
      "op": "SHL"
    },
    "1221": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1223": {
      "op": "DUP3"
    },
    "1224": {
      "op": "ADD"
    },
    "1225": {
      "op": "MSTORE"
    },
    "1226": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1228": {
      "op": "ADD"
    },
    "1229": {
      "fn": "ERC20._approve",
      "offset": [
        10163,
        10231
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FC"
    },
    "1232": {
      "op": "JUMP"
    },
    "1233": {
      "fn": "ERC20._approve",
      "offset": [
        10163,
        10231
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1238": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1240": {
      "op": "SHL"
    },
    "1241": {
      "op": "SUB"
    },
    "1242": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 20
    },
    "1243": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1244": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "AND",
      "path": "2"
    },
    "1245": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1247": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1248": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1249": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1250": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10253
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1252": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1254": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1255": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1256": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1257": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1259": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1260": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1261": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10260
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1262": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10269
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1263": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10269
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1264": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10269
      ],
      "op": "AND",
      "path": "2"
    },
    "1265": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10269
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1266": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10269
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1267": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10269
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1268": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10269
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1269": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10269
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1270": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10269
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1271": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10269
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1272": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10269
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1273": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10269
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1274": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10269
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1275": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10278
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1276": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10278
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1277": {
      "fn": "ERC20._approve",
      "offset": [
        10242,
        10278
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1278": {
      "fn": "ERC20._approve",
      "offset": [
        10293,
        10325
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 21
    },
    "1279": {
      "fn": "ERC20._approve",
      "offset": [
        10293,
        10325
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1280": {
      "op": "DUP5"
    },
    "1281": {
      "op": "DUP2"
    },
    "1282": {
      "op": "MSTORE"
    },
    "1283": {
      "fn": "ERC20._approve",
      "offset": [
        10293,
        10325
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1316": {
      "fn": "ERC20._approve",
      "offset": [
        10293,
        10325
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1317": {
      "op": "ADD"
    },
    "1318": {
      "fn": "ERC20._approve",
      "offset": [
        10293,
        10325
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1320": {
      "fn": "ERC20._approve",
      "offset": [
        10293,
        10325
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1321": {
      "fn": "ERC20._approve",
      "offset": [
        10293,
        10325
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1322": {
      "fn": "ERC20._approve",
      "offset": [
        10293,
        10325
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1323": {
      "fn": "ERC20._approve",
      "offset": [
        10293,
        10325
      ],
      "op": "SUB",
      "path": "2"
    },
    "1324": {
      "fn": "ERC20._approve",
      "offset": [
        10293,
        10325
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1325": {
      "fn": "ERC20._approve",
      "offset": [
        10293,
        10325
      ],
      "op": "LOG3",
      "path": "2"
    },
    "1326": {
      "fn": "ERC20._approve",
      "offset": [
        9962,
        10332
      ],
      "op": "POP",
      "path": "2"
    },
    "1327": {
      "fn": "ERC20._approve",
      "offset": [
        9962,
        10332
      ],
      "op": "POP",
      "path": "2"
    },
    "1328": {
      "fn": "ERC20._approve",
      "offset": [
        9962,
        10332
      ],
      "op": "POP",
      "path": "2"
    },
    "1329": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        9962,
        10332
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1330": {
      "fn": "ERC20._transfer",
      "offset": [
        7265,
        7978
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1331": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1335": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1337": {
      "op": "SHL"
    },
    "1338": {
      "op": "SUB"
    },
    "1339": {
      "fn": "ERC20._transfer",
      "offset": [
        7400,
        7420
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 22
    },
    "1340": {
      "branch": 32,
      "fn": "ERC20._transfer",
      "offset": [
        7400,
        7420
      ],
      "op": "AND",
      "path": "2"
    },
    "1341": {
      "fn": "ERC20._transfer",
      "offset": [
        7392,
        7462
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x596"
    },
    "1344": {
      "branch": 32,
      "fn": "ERC20._transfer",
      "offset": [
        7392,
        7462
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1345": {
      "fn": "ERC20._transfer",
      "offset": [
        7392,
        7462
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1347": {
      "fn": "ERC20._transfer",
      "offset": [
        7392,
        7462
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1348": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1352": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1354": {
      "op": "SHL"
    },
    "1355": {
      "fn": "ERC20._transfer",
      "offset": [
        7392,
        7462
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1356": {
      "fn": "ERC20._transfer",
      "offset": [
        7392,
        7462
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1357": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1359": {
      "fn": "ERC20._transfer",
      "offset": [
        7392,
        7462
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1361": {
      "fn": "ERC20._transfer",
      "offset": [
        7392,
        7462
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1362": {
      "fn": "ERC20._transfer",
      "offset": [
        7392,
        7462
      ],
      "op": "ADD",
      "path": "2"
    },
    "1363": {
      "op": "MSTORE"
    },
    "1364": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "1366": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1368": {
      "op": "DUP3"
    },
    "1369": {
      "op": "ADD"
    },
    "1370": {
      "op": "MSTORE"
    },
    "1371": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "1404": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1406": {
      "op": "DUP3"
    },
    "1407": {
      "op": "ADD"
    },
    "1408": {
      "op": "MSTORE"
    },
    "1409": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "1415": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "1417": {
      "op": "SHL"
    },
    "1418": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1420": {
      "op": "DUP3"
    },
    "1421": {
      "op": "ADD"
    },
    "1422": {
      "op": "MSTORE"
    },
    "1423": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1425": {
      "op": "ADD"
    },
    "1426": {
      "fn": "ERC20._transfer",
      "offset": [
        7392,
        7462
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FC"
    },
    "1429": {
      "op": "JUMP"
    },
    "1430": {
      "fn": "ERC20._transfer",
      "offset": [
        7392,
        7462
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1435": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1437": {
      "op": "SHL"
    },
    "1438": {
      "op": "SUB"
    },
    "1439": {
      "fn": "ERC20._transfer",
      "offset": [
        7480,
        7503
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 23
    },
    "1440": {
      "branch": 33,
      "fn": "ERC20._transfer",
      "offset": [
        7480,
        7503
      ],
      "op": "AND",
      "path": "2"
    },
    "1441": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7543
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5F8"
    },
    "1444": {
      "branch": 33,
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7543
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1445": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7543
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1447": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7543
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1448": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1452": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1454": {
      "op": "SHL"
    },
    "1455": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7543
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1456": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7543
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1457": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1459": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7543
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1461": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7543
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1462": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7543
      ],
      "op": "ADD",
      "path": "2"
    },
    "1463": {
      "op": "MSTORE"
    },
    "1464": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "1466": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1468": {
      "op": "DUP3"
    },
    "1469": {
      "op": "ADD"
    },
    "1470": {
      "op": "MSTORE"
    },
    "1471": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "1504": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1506": {
      "op": "DUP3"
    },
    "1507": {
      "op": "ADD"
    },
    "1508": {
      "op": "MSTORE"
    },
    "1509": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "1513": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "1515": {
      "op": "SHL"
    },
    "1516": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1518": {
      "op": "DUP3"
    },
    "1519": {
      "op": "ADD"
    },
    "1520": {
      "op": "MSTORE"
    },
    "1521": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1523": {
      "op": "ADD"
    },
    "1524": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7543
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FC"
    },
    "1527": {
      "op": "JUMP"
    },
    "1528": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7543
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1533": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1535": {
      "op": "SHL"
    },
    "1536": {
      "op": "SUB"
    },
    "1537": {
      "fn": "ERC20._transfer",
      "offset": [
        7636,
        7653
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1538": {
      "fn": "ERC20._transfer",
      "offset": [
        7636,
        7653
      ],
      "op": "AND",
      "path": "2"
    },
    "1539": {
      "fn": "ERC20._transfer",
      "offset": [
        7612,
        7633
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1541": {
      "fn": "ERC20._transfer",
      "offset": [
        7636,
        7653
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1542": {
      "fn": "ERC20._transfer",
      "offset": [
        7636,
        7653
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1543": {
      "fn": "ERC20._transfer",
      "offset": [
        7636,
        7653
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1544": {
      "fn": "ERC20._transfer",
      "offset": [
        7636,
        7653
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1546": {
      "fn": "ERC20._transfer",
      "offset": [
        7636,
        7653
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1547": {
      "fn": "ERC20._transfer",
      "offset": [
        7636,
        7653
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1548": {
      "fn": "ERC20._transfer",
      "offset": [
        7636,
        7653
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1549": {
      "fn": "ERC20._transfer",
      "offset": [
        7636,
        7653
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1551": {
      "fn": "ERC20._transfer",
      "offset": [
        7636,
        7653
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1552": {
      "fn": "ERC20._transfer",
      "offset": [
        7636,
        7653
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1553": {
      "fn": "ERC20._transfer",
      "offset": [
        7636,
        7653
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1554": {
      "fn": "ERC20._transfer",
      "offset": [
        7671,
        7694
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 24
    },
    "1555": {
      "fn": "ERC20._transfer",
      "offset": [
        7671,
        7694
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1556": {
      "fn": "ERC20._transfer",
      "offset": [
        7671,
        7694
      ],
      "op": "LT",
      "path": "2"
    },
    "1557": {
      "branch": 34,
      "fn": "ERC20._transfer",
      "offset": [
        7671,
        7694
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1558": {
      "fn": "ERC20._transfer",
      "offset": [
        7663,
        7737
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x670"
    },
    "1561": {
      "branch": 34,
      "fn": "ERC20._transfer",
      "offset": [
        7663,
        7737
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1562": {
      "fn": "ERC20._transfer",
      "offset": [
        7663,
        7737
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1564": {
      "fn": "ERC20._transfer",
      "offset": [
        7663,
        7737
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1565": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1569": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1571": {
      "op": "SHL"
    },
    "1572": {
      "fn": "ERC20._transfer",
      "offset": [
        7663,
        7737
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1573": {
      "fn": "ERC20._transfer",
      "offset": [
        7663,
        7737
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1574": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1576": {
      "fn": "ERC20._transfer",
      "offset": [
        7663,
        7737
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1578": {
      "fn": "ERC20._transfer",
      "offset": [
        7663,
        7737
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1579": {
      "fn": "ERC20._transfer",
      "offset": [
        7663,
        7737
      ],
      "op": "ADD",
      "path": "2"
    },
    "1580": {
      "op": "MSTORE"
    },
    "1581": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1583": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1585": {
      "op": "DUP3"
    },
    "1586": {
      "op": "ADD"
    },
    "1587": {
      "op": "MSTORE"
    },
    "1588": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "1621": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1623": {
      "op": "DUP3"
    },
    "1624": {
      "op": "ADD"
    },
    "1625": {
      "op": "MSTORE"
    },
    "1626": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "1633": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1635": {
      "op": "SHL"
    },
    "1636": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1638": {
      "op": "DUP3"
    },
    "1639": {
      "op": "ADD"
    },
    "1640": {
      "op": "MSTORE"
    },
    "1641": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1643": {
      "op": "ADD"
    },
    "1644": {
      "fn": "ERC20._transfer",
      "offset": [
        7663,
        7737
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FC"
    },
    "1647": {
      "op": "JUMP"
    },
    "1648": {
      "fn": "ERC20._transfer",
      "offset": [
        7663,
        7737
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1653": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1655": {
      "op": "SHL"
    },
    "1656": {
      "op": "SUB"
    },
    "1657": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 25
    },
    "1658": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1659": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "AND",
      "path": "2"
    },
    "1660": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7780
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1662": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1663": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1664": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1665": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1667": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1668": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1669": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1670": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1672": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1673": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1674": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7788
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1675": {
      "fn": "ERC20._transfer",
      "offset": [
        7791,
        7813
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1676": {
      "fn": "ERC20._transfer",
      "offset": [
        7791,
        7813
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1677": {
      "fn": "ERC20._transfer",
      "offset": [
        7791,
        7813
      ],
      "op": "SUB",
      "path": "2"
    },
    "1678": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7813
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1679": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7813
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1680": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7853
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 26
    },
    "1681": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7853
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1682": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7853
      ],
      "op": "AND",
      "path": "2"
    },
    "1683": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7853
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1684": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7853
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1685": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7853
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1686": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7853
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1687": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7853
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1688": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7863
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1689": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7863
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1690": {
      "fn": "ERC20._transfer",
      "offset": [
        7807,
        7813
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1691": {
      "fn": "ERC20._transfer",
      "offset": [
        7807,
        7813
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1692": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7780
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1693": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7863
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6A7"
    },
    "1696": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1697": {
      "fn": "ERC20._transfer",
      "offset": [
        7807,
        7813
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1698": {
      "fn": "ERC20._transfer",
      "offset": [
        7807,
        7813
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1699": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7863
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x82D"
    },
    "1702": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7833,
        7863
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1703": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7863
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1704": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7863
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1705": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7863
      ],
      "op": "POP",
      "path": "2"
    },
    "1706": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7863
      ],
      "op": "POP",
      "path": "2"
    },
    "1707": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7863
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1708": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1709": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7863
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1710": {
      "fn": "ERC20._transfer",
      "offset": [
        7833,
        7863
      ],
      "op": "POP",
      "path": "2"
    },
    "1711": {
      "fn": "ERC20._transfer",
      "offset": [
        7896,
        7905
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 27
    },
    "1712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1716": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1718": {
      "op": "SHL"
    },
    "1719": {
      "op": "SUB"
    },
    "1720": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "AND",
      "path": "2"
    },
    "1721": {
      "fn": "ERC20._transfer",
      "offset": [
        7888,
        7894
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1722": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1726": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1728": {
      "op": "SHL"
    },
    "1729": {
      "op": "SUB"
    },
    "1730": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "AND",
      "path": "2"
    },
    "1731": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "1764": {
      "fn": "ERC20._transfer",
      "offset": [
        7907,
        7913
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1765": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1767": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1768": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6F3"
    },
    "1771": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1772": {
      "op": "DUP2"
    },
    "1773": {
      "op": "MSTORE"
    },
    "1774": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1776": {
      "op": "ADD"
    },
    "1777": {
      "op": "SWAP1"
    },
    "1778": {
      "op": "JUMP"
    },
    "1779": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1780": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1782": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1783": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1784": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1785": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "SUB",
      "path": "2"
    },
    "1786": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1787": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7914
      ],
      "op": "LOG3",
      "path": "2"
    },
    "1788": {
      "fn": "ERC20._transfer",
      "offset": [
        7382,
        7978
      ],
      "op": "POP",
      "path": "2"
    },
    "1789": {
      "fn": "ERC20._transfer",
      "offset": [
        7265,
        7978
      ],
      "op": "POP",
      "path": "2"
    },
    "1790": {
      "fn": "ERC20._transfer",
      "offset": [
        7265,
        7978
      ],
      "op": "POP",
      "path": "2"
    },
    "1791": {
      "fn": "ERC20._transfer",
      "offset": [
        7265,
        7978
      ],
      "op": "POP",
      "path": "2"
    },
    "1792": {
      "fn": "ERC20._transfer",
      "jump": "o",
      "offset": [
        7265,
        7978
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1793": {
      "op": "JUMPDEST"
    },
    "1794": {
      "op": "DUP1"
    },
    "1795": {
      "op": "CALLDATALOAD"
    },
    "1796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1800": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1802": {
      "op": "SHL"
    },
    "1803": {
      "op": "SUB"
    },
    "1804": {
      "op": "DUP2"
    },
    "1805": {
      "op": "AND"
    },
    "1806": {
      "op": "DUP2"
    },
    "1807": {
      "op": "EQ"
    },
    "1808": {
      "op": "PUSH2",
      "value": "0x718"
    },
    "1811": {
      "op": "JUMPI"
    },
    "1812": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1814": {
      "op": "DUP1"
    },
    "1815": {
      "op": "REVERT"
    },
    "1816": {
      "op": "JUMPDEST"
    },
    "1817": {
      "op": "SWAP2"
    },
    "1818": {
      "op": "SWAP1"
    },
    "1819": {
      "op": "POP"
    },
    "1820": {
      "jump": "o",
      "op": "JUMP"
    },
    "1821": {
      "op": "JUMPDEST"
    },
    "1822": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1824": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1826": {
      "op": "DUP3"
    },
    "1827": {
      "op": "DUP5"
    },
    "1828": {
      "op": "SUB"
    },
    "1829": {
      "op": "SLT"
    },
    "1830": {
      "op": "ISZERO"
    },
    "1831": {
      "op": "PUSH2",
      "value": "0x72F"
    },
    "1834": {
      "op": "JUMPI"
    },
    "1835": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1837": {
      "op": "DUP1"
    },
    "1838": {
      "op": "REVERT"
    },
    "1839": {
      "op": "JUMPDEST"
    },
    "1840": {
      "op": "PUSH2",
      "value": "0x738"
    },
    "1843": {
      "op": "DUP3"
    },
    "1844": {
      "op": "PUSH2",
      "value": "0x701"
    },
    "1847": {
      "jump": "i",
      "op": "JUMP"
    },
    "1848": {
      "op": "JUMPDEST"
    },
    "1849": {
      "op": "SWAP4"
    },
    "1850": {
      "op": "SWAP3"
    },
    "1851": {
      "op": "POP"
    },
    "1852": {
      "op": "POP"
    },
    "1853": {
      "op": "POP"
    },
    "1854": {
      "jump": "o",
      "op": "JUMP"
    },
    "1855": {
      "op": "JUMPDEST"
    },
    "1856": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1858": {
      "op": "DUP1"
    },
    "1859": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1861": {
      "op": "DUP4"
    },
    "1862": {
      "op": "DUP6"
    },
    "1863": {
      "op": "SUB"
    },
    "1864": {
      "op": "SLT"
    },
    "1865": {
      "op": "ISZERO"
    },
    "1866": {
      "op": "PUSH2",
      "value": "0x752"
    },
    "1869": {
      "op": "JUMPI"
    },
    "1870": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1872": {
      "op": "DUP1"
    },
    "1873": {
      "op": "REVERT"
    },
    "1874": {
      "op": "JUMPDEST"
    },
    "1875": {
      "op": "PUSH2",
      "value": "0x75B"
    },
    "1878": {
      "op": "DUP4"
    },
    "1879": {
      "op": "PUSH2",
      "value": "0x701"
    },
    "1882": {
      "jump": "i",
      "op": "JUMP"
    },
    "1883": {
      "op": "JUMPDEST"
    },
    "1884": {
      "op": "SWAP2"
    },
    "1885": {
      "op": "POP"
    },
    "1886": {
      "op": "PUSH2",
      "value": "0x769"
    },
    "1889": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1891": {
      "op": "DUP5"
    },
    "1892": {
      "op": "ADD"
    },
    "1893": {
      "op": "PUSH2",
      "value": "0x701"
    },
    "1896": {
      "jump": "i",
      "op": "JUMP"
    },
    "1897": {
      "op": "JUMPDEST"
    },
    "1898": {
      "op": "SWAP1"
    },
    "1899": {
      "op": "POP"
    },
    "1900": {
      "op": "SWAP3"
    },
    "1901": {
      "op": "POP"
    },
    "1902": {
      "op": "SWAP3"
    },
    "1903": {
      "op": "SWAP1"
    },
    "1904": {
      "op": "POP"
    },
    "1905": {
      "jump": "o",
      "op": "JUMP"
    },
    "1906": {
      "op": "JUMPDEST"
    },
    "1907": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1909": {
      "op": "DUP1"
    },
    "1910": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1912": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1914": {
      "op": "DUP5"
    },
    "1915": {
      "op": "DUP7"
    },
    "1916": {
      "op": "SUB"
    },
    "1917": {
      "op": "SLT"
    },
    "1918": {
      "op": "ISZERO"
    },
    "1919": {
      "op": "PUSH2",
      "value": "0x787"
    },
    "1922": {
      "op": "JUMPI"
    },
    "1923": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1925": {
      "op": "DUP1"
    },
    "1926": {
      "op": "REVERT"
    },
    "1927": {
      "op": "JUMPDEST"
    },
    "1928": {
      "op": "PUSH2",
      "value": "0x790"
    },
    "1931": {
      "op": "DUP5"
    },
    "1932": {
      "op": "PUSH2",
      "value": "0x701"
    },
    "1935": {
      "jump": "i",
      "op": "JUMP"
    },
    "1936": {
      "op": "JUMPDEST"
    },
    "1937": {
      "op": "SWAP3"
    },
    "1938": {
      "op": "POP"
    },
    "1939": {
      "op": "PUSH2",
      "value": "0x79E"
    },
    "1942": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1944": {
      "op": "DUP6"
    },
    "1945": {
      "op": "ADD"
    },
    "1946": {
      "op": "PUSH2",
      "value": "0x701"
    },
    "1949": {
      "jump": "i",
      "op": "JUMP"
    },
    "1950": {
      "op": "JUMPDEST"
    },
    "1951": {
      "op": "SWAP2"
    },
    "1952": {
      "op": "POP"
    },
    "1953": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1955": {
      "op": "DUP5"
    },
    "1956": {
      "op": "ADD"
    },
    "1957": {
      "op": "CALLDATALOAD"
    },
    "1958": {
      "op": "SWAP1"
    },
    "1959": {
      "op": "POP"
    },
    "1960": {
      "op": "SWAP3"
    },
    "1961": {
      "op": "POP"
    },
    "1962": {
      "op": "SWAP3"
    },
    "1963": {
      "op": "POP"
    },
    "1964": {
      "op": "SWAP3"
    },
    "1965": {
      "jump": "o",
      "op": "JUMP"
    },
    "1966": {
      "op": "JUMPDEST"
    },
    "1967": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1969": {
      "op": "DUP1"
    },
    "1970": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1972": {
      "op": "DUP4"
    },
    "1973": {
      "op": "DUP6"
    },
    "1974": {
      "op": "SUB"
    },
    "1975": {
      "op": "SLT"
    },
    "1976": {
      "op": "ISZERO"
    },
    "1977": {
      "op": "PUSH2",
      "value": "0x7C1"
    },
    "1980": {
      "op": "JUMPI"
    },
    "1981": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1983": {
      "op": "DUP1"
    },
    "1984": {
      "op": "REVERT"
    },
    "1985": {
      "op": "JUMPDEST"
    },
    "1986": {
      "op": "PUSH2",
      "value": "0x7CA"
    },
    "1989": {
      "op": "DUP4"
    },
    "1990": {
      "op": "PUSH2",
      "value": "0x701"
    },
    "1993": {
      "jump": "i",
      "op": "JUMP"
    },
    "1994": {
      "op": "JUMPDEST"
    },
    "1995": {
      "op": "SWAP5"
    },
    "1996": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1998": {
      "op": "SWAP4"
    },
    "1999": {
      "op": "SWAP1"
    },
    "2000": {
      "op": "SWAP4"
    },
    "2001": {
      "op": "ADD"
    },
    "2002": {
      "op": "CALLDATALOAD"
    },
    "2003": {
      "op": "SWAP4"
    },
    "2004": {
      "op": "POP"
    },
    "2005": {
      "op": "POP"
    },
    "2006": {
      "op": "POP"
    },
    "2007": {
      "jump": "o",
      "op": "JUMP"
    },
    "2008": {
      "op": "JUMPDEST"
    },
    "2009": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2011": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2013": {
      "op": "DUP1"
    },
    "2014": {
      "op": "DUP4"
    },
    "2015": {
      "op": "MSTORE"
    },
    "2016": {
      "op": "DUP4"
    },
    "2017": {
      "op": "MLOAD"
    },
    "2018": {
      "op": "DUP1"
    },
    "2019": {
      "op": "DUP3"
    },
    "2020": {
      "op": "DUP6"
    },
    "2021": {
      "op": "ADD"
    },
    "2022": {
      "op": "MSTORE"
    },
    "2023": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2025": {
      "op": "JUMPDEST"
    },
    "2026": {
      "op": "DUP2"
    },
    "2027": {
      "op": "DUP2"
    },
    "2028": {
      "op": "LT"
    },
    "2029": {
      "op": "ISZERO"
    },
    "2030": {
      "op": "PUSH2",
      "value": "0x805"
    },
    "2033": {
      "op": "JUMPI"
    },
    "2034": {
      "op": "DUP6"
    },
    "2035": {
      "op": "DUP2"
    },
    "2036": {
      "op": "ADD"
    },
    "2037": {
      "op": "DUP4"
    },
    "2038": {
      "op": "ADD"
    },
    "2039": {
      "op": "MLOAD"
    },
    "2040": {
      "op": "DUP6"
    },
    "2041": {
      "op": "DUP3"
    },
    "2042": {
      "op": "ADD"
    },
    "2043": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2045": {
      "op": "ADD"
    },
    "2046": {
      "op": "MSTORE"
    },
    "2047": {
      "op": "DUP3"
    },
    "2048": {
      "op": "ADD"
    },
    "2049": {
      "op": "PUSH2",
      "value": "0x7E9"
    },
    "2052": {
      "op": "JUMP"
    },
    "2053": {
      "op": "JUMPDEST"
    },
    "2054": {
      "op": "DUP2"
    },
    "2055": {
      "op": "DUP2"
    },
    "2056": {
      "op": "GT"
    },
    "2057": {
      "op": "ISZERO"
    },
    "2058": {
      "op": "PUSH2",
      "value": "0x817"
    },
    "2061": {
      "op": "JUMPI"
    },
    "2062": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2064": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2066": {
      "op": "DUP4"
    },
    "2067": {
      "op": "DUP8"
    },
    "2068": {
      "op": "ADD"
    },
    "2069": {
      "op": "ADD"
    },
    "2070": {
      "op": "MSTORE"
    },
    "2071": {
      "op": "JUMPDEST"
    },
    "2072": {
      "op": "POP"
    },
    "2073": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2075": {
      "op": "ADD"
    },
    "2076": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2078": {
      "op": "NOT"
    },
    "2079": {
      "op": "AND"
    },
    "2080": {
      "op": "SWAP3"
    },
    "2081": {
      "op": "SWAP1"
    },
    "2082": {
      "op": "SWAP3"
    },
    "2083": {
      "op": "ADD"
    },
    "2084": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2086": {
      "op": "ADD"
    },
    "2087": {
      "op": "SWAP4"
    },
    "2088": {
      "op": "SWAP3"
    },
    "2089": {
      "op": "POP"
    },
    "2090": {
      "op": "POP"
    },
    "2091": {
      "op": "POP"
    },
    "2092": {
      "jump": "o",
      "op": "JUMP"
    },
    "2093": {
      "op": "JUMPDEST"
    },
    "2094": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2096": {
      "op": "DUP3"
    },
    "2097": {
      "op": "NOT"
    },
    "2098": {
      "op": "DUP3"
    },
    "2099": {
      "op": "GT"
    },
    "2100": {
      "op": "ISZERO"
    },
    "2101": {
      "op": "PUSH2",
      "value": "0x84E"
    },
    "2104": {
      "op": "JUMPI"
    },
    "2105": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2110": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2112": {
      "op": "SHL"
    },
    "2113": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2115": {
      "op": "MSTORE"
    },
    "2116": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2118": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2120": {
      "op": "MSTORE"
    },
    "2121": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2123": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2125": {
      "op": "REVERT"
    },
    "2126": {
      "op": "JUMPDEST"
    },
    "2127": {
      "op": "POP"
    },
    "2128": {
      "op": "ADD"
    },
    "2129": {
      "op": "SWAP1"
    },
    "2130": {
      "jump": "o",
      "op": "JUMP"
    },
    "2131": {
      "op": "JUMPDEST"
    },
    "2132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2134": {
      "op": "DUP2"
    },
    "2135": {
      "op": "DUP2"
    },
    "2136": {
      "op": "SHR"
    },
    "2137": {
      "op": "SWAP1"
    },
    "2138": {
      "op": "DUP3"
    },
    "2139": {
      "op": "AND"
    },
    "2140": {
      "op": "DUP1"
    },
    "2141": {
      "op": "PUSH2",
      "value": "0x867"
    },
    "2144": {
      "op": "JUMPI"
    },
    "2145": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "2147": {
      "op": "DUP3"
    },
    "2148": {
      "op": "AND"
    },
    "2149": {
      "op": "SWAP2"
    },
    "2150": {
      "op": "POP"
    },
    "2151": {
      "op": "JUMPDEST"
    },
    "2152": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2154": {
      "op": "DUP3"
    },
    "2155": {
      "op": "LT"
    },
    "2156": {
      "op": "DUP2"
    },
    "2157": {
      "op": "EQ"
    },
    "2158": {
      "op": "ISZERO"
    },
    "2159": {
      "op": "PUSH2",
      "value": "0x888"
    },
    "2162": {
      "op": "JUMPI"
    },
    "2163": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2168": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2170": {
      "op": "SHL"
    },
    "2171": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2173": {
      "op": "MSTORE"
    },
    "2174": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2176": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2178": {
      "op": "MSTORE"
    },
    "2179": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2181": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2183": {
      "op": "REVERT"
    },
    "2184": {
      "op": "JUMPDEST"
    },
    "2185": {
      "op": "POP"
    },
    "2186": {
      "op": "SWAP2"
    },
    "2187": {
      "op": "SWAP1"
    },
    "2188": {
      "op": "POP"
    },
    "2189": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "8dcf47d054dbef74601cd18742b080c8eb62c60e",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\n        require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\n        unchecked {\n            _approve(sender, _msgSender(), currentAllowance - amount);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        uint256 senderBalance = _balances[sender];\n        require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[sender] = senderBalance - amount;\n        }\n        _balances[recipient] += amount;\n\n        emit Transfer(sender, recipient, amount);\n\n        _afterTokenTransfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n",
  "sourceMap": "1331:10416:2:-:0;;;1906:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1972:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1995:17:2;;;;:7;;:17;;;;;:::i;:::-;;1906:113;;1331:10416;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1331:10416:2;;;-1:-1:-1;1331:10416:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:885:34;68:5;121:3;114:4;106:6;102:17;98:27;88:55;;139:1;136;129:12;88:55;162:13;;-1:-1:-1;;;;;224:10:34;;;221:36;;;237:18;;:::i;:::-;312:2;306:9;280:2;366:13;;-1:-1:-1;;362:22:34;;;386:2;358:31;354:40;342:53;;;410:18;;;430:22;;;407:46;404:72;;;456:18;;:::i;:::-;496:10;492:2;485:22;531:2;523:6;516:18;553:4;543:14;;598:3;593:2;588;580:6;576:15;572:24;569:33;566:53;;;615:1;612;605:12;566:53;637:1;628:10;;647:133;661:2;658:1;655:9;647:133;;;749:14;;;745:23;;739:30;718:14;;;714:23;;707:63;672:10;;;;647:133;;;798:2;795:1;792:9;789:80;;;857:1;852:2;847;839:6;835:15;831:24;824:35;789:80;887:6;14:885;-1:-1:-1;;;;;;14:885:34:o;904:562::-;1003:6;1011;1064:2;1052:9;1043:7;1039:23;1035:32;1032:52;;;1080:1;1077;1070:12;1032:52;1107:16;;-1:-1:-1;;;;;1172:14:34;;;1169:34;;;1199:1;1196;1189:12;1169:34;1222:61;1275:7;1266:6;1255:9;1251:22;1222:61;:::i;:::-;1212:71;;1329:2;1318:9;1314:18;1308:25;1292:41;;1358:2;1348:8;1345:16;1342:36;;;1374:1;1371;1364:12;1342:36;;1397:63;1452:7;1441:8;1430:9;1426:24;1397:63;:::i;:::-;1387:73;;;904:562;;;;;:::o;1471:380::-;1550:1;1546:12;;;;1593;;;1614:61;;1668:4;1660:6;1656:17;1646:27;;1614:61;1721:2;1713:6;1710:14;1690:18;1687:38;1684:161;;;1767:10;1762:3;1758:20;1755:1;1748:31;1802:4;1799:1;1792:15;1830:4;1827:1;1820:15;1684:161;;1471:380;;;:::o;1856:127::-;1917:10;1912:3;1908:20;1905:1;1898:31;1948:4;1945:1;1938:15;1972:4;1969:1;1962:15;1856:127;1331:10416:2;;;;;;",
  "sourcePath": "/Users/patrick/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/ERC20.sol",
  "type": "contract"
}